go object darwin 386 
  exports automatically generated from
  handler/handler.go in package "handler"

$$  // exports
    package handler
	import runtime "runtime"
	import twist "twist"
	import http "http"
	func "".initÂ·1 ()
	type "http".ResponseWriter interface { Header() "http".Header; Write(? []uint8) (? int, ? "os".Error); WriteHeader(? int) }
	import os "os" // indirect
	type "os".Error interface { String() string }
	import io "io" // indirect
	type "io".Writer interface { Write(p []uint8) (n int, err "os".Error) }
	type "http".Header map[string] []string
	func (h "http".Header) Add (key string, value string)
	func (h "http".Header) Del (key string)
	func (h "http".Header) Get (key string) string
	func (h "http".Header) Set (key string, value string)
	func (h "http".Header) Write (w "io".Writer) "os".Error
	func (h "http".Header) WriteSubset (w "io".Writer, exclude map[string] bool) "os".Error
	import multipart "mime/multipart" // indirect
	type "mime/multipart".File interface { Close() "os".Error; Read(p []uint8) (n int, err "os".Error); ReadAt(p []uint8, off int64) (n int, err "os".Error); Seek(offset int64, whence int) (ret int64, err "os".Error) }
	type "mime/multipart".FileHeader struct { Filename string; Header "net/textproto".MIMEHeader; content []uint8; tmpfile string }
	func (fh *"mime/multipart".FileHeader) Open () (? "mime/multipart".File, ? "os".Error)
	import textproto "net/textproto" // indirect
	type "net/textproto".MIMEHeader map[string] []string
	func (h "net/textproto".MIMEHeader) Add (key string, value string)
	func (h "net/textproto".MIMEHeader) Del (key string)
	func (h "net/textproto".MIMEHeader) Get (key string) string
	func (h "net/textproto".MIMEHeader) Set (key string, value string)
	type "mime/multipart".Reader interface { NextPart() (? *"mime/multipart".Part, ? "os".Error); ReadForm(maxMemory int64) (? *"mime/multipart".Form, ? "os".Error) }
	type "mime/multipart".Part struct { Header "net/textproto".MIMEHeader; buffer *"bytes".Buffer; mr *"mime/multipart".multiReader; disposition string; dispositionParams map[string] string }
	func (bp *"mime/multipart".Part) Close () "os".Error
	func (p *"mime/multipart".Part) FileName () string
	func (p *"mime/multipart".Part) FormName () string
	func (bp *"mime/multipart".Part) Read (p []uint8) (n int, err "os".Error)
	func (p *"mime/multipart".Part) parseContentDisposition ()
	func (bp *"mime/multipart".Part) populateHeaders () "os".Error
	import bytes "bytes" // indirect
	type "io".Reader interface { Read(p []uint8) (n int, err "os".Error) }
	type "bytes".Buffer struct { buf []uint8; off int; runeBytes [4]uint8; bootstrap [64]uint8; lastRead "bytes".readOp }
	func (b *"bytes".Buffer) Bytes () []uint8
	func (b *"bytes".Buffer) Len () int
	func (b *"bytes".Buffer) Next (n int) []uint8
	func (b *"bytes".Buffer) Read (p []uint8) (n int, err "os".Error)
	func (b *"bytes".Buffer) ReadByte () (c uint8, err "os".Error)
	func (b *"bytes".Buffer) ReadBytes (delim uint8) (line []uint8, err "os".Error)
	func (b *"bytes".Buffer) ReadFrom (r "io".Reader) (n int64, err "os".Error)
	func (b *"bytes".Buffer) ReadRune () (r int, size int, err "os".Error)
	func (b *"bytes".Buffer) ReadString (delim uint8) (line string, err "os".Error)
	func (b *"bytes".Buffer) Reset ()
	func (b *"bytes".Buffer) String () string
	func (b *"bytes".Buffer) Truncate (n int)
	func (b *"bytes".Buffer) UnreadByte () "os".Error
	func (b *"bytes".Buffer) UnreadRune () "os".Error
	func (b *"bytes".Buffer) Write (p []uint8) (n int, err "os".Error)
	func (b *"bytes".Buffer) WriteByte (c uint8) "os".Error
	func (b *"bytes".Buffer) WriteRune (r int) (n int, err "os".Error)
	func (b *"bytes".Buffer) WriteString (s string) (n int, err "os".Error)
	func (b *"bytes".Buffer) WriteTo (w "io".Writer) (n int64, err "os".Error)
	func (b *"bytes".Buffer) grow (n int) int
	type "bytes".readOp int
	type "mime/multipart".Form struct { Value map[string] []string; File map[string] []*"mime/multipart".FileHeader }
	func (f *"mime/multipart".Form) RemoveAll () "os".Error
	type "mime/multipart".multiReader struct { bufReader *"bufio".Reader; currentPart *"mime/multipart".Part; partsRead int; nlDashBoundary []uint8; dashBoundaryDash []uint8; dashBoundary []uint8 }
	func (mr *"mime/multipart".multiReader) NextPart () (? *"mime/multipart".Part, ? "os".Error)
	func (r *"mime/multipart".multiReader) ReadForm (maxMemory int64) (f *"mime/multipart".Form, err "os".Error)
	func (mr *"mime/multipart".multiReader) isBoundaryDelimiterLine (line []uint8) bool
	import bufio "bufio" // indirect
	type "bufio".Reader struct { buf []uint8; rd "io".Reader; r int; w int; err "os".Error; lastByte int; lastRuneSize int }
	func (b *"bufio".Reader) Buffered () int
	func (b *"bufio".Reader) Peek (n int) (? []uint8, ? "os".Error)
	func (b *"bufio".Reader) Read (p []uint8) (n int, err "os".Error)
	func (b *"bufio".Reader) ReadByte () (c uint8, err "os".Error)
	func (b *"bufio".Reader) ReadBytes (delim uint8) (line []uint8, err "os".Error)
	func (b *"bufio".Reader) ReadLine () (line []uint8, isPrefix bool, err "os".Error)
	func (b *"bufio".Reader) ReadRune () (rune int, size int, err "os".Error)
	func (b *"bufio".Reader) ReadSlice (delim uint8) (line []uint8, err "os".Error)
	func (b *"bufio".Reader) ReadString (delim uint8) (line string, err "os".Error)
	func (b *"bufio".Reader) UnreadByte () "os".Error
	func (b *"bufio".Reader) UnreadRune () "os".Error
	func (b *"bufio".Reader) fill ()
	type "http".Request struct { Method string; RawURL string; URL *"http".URL; Proto string; ProtoMajor int; ProtoMinor int; Header "http".Header; Cookie []*"http".Cookie; Body "io".ReadCloser; ContentLength int64; TransferEncoding []string; Close bool; Host string; Referer string; UserAgent string; Form "http".Values; MultipartForm *"mime/multipart".Form; Trailer "http".Header; RemoteAddr string; TLS *"crypto/tls".ConnectionState }
	func (r *"http".Request) FormFile (key string) (? "mime/multipart".File, ? *"mime/multipart".FileHeader, ? "os".Error)
	func (r *"http".Request) FormValue (key string) string
	func (r *"http".Request) MultipartReader () (? "mime/multipart".Reader, ? "os".Error)
	func (r *"http".Request) ParseForm () "os".Error
	func (r *"http".Request) ParseMultipartForm (maxMemory int64) "os".Error
	func (r *"http".Request) ProtoAtLeast (major int, minor int) bool
	func (r *"http".Request) SetBasicAuth (username string, password string)
	func (req *"http".Request) Write (w "io".Writer) "os".Error
	func (req *"http".Request) WriteProxy (w "io".Writer) "os".Error
	func (r *"http".Request) expectsContinue () bool
	func (r *"http".Request) multipartReader () (? "mime/multipart".Reader, ? "os".Error)
	func (r *"http".Request) wantsHttp10KeepAlive () bool
	func (req *"http".Request) write (w "io".Writer, usingProxy bool) "os".Error
	type "http".Values map[string] []string
	func (v "http".Values) Add (key string, value string)
	func (v "http".Values) Del (key string)
	func (v "http".Values) Encode () string
	func (v "http".Values) Get (key string) string
	func (v "http".Values) Set (key string, value string)
	type "http".URL struct { Raw string; Scheme string; RawAuthority string; RawUserinfo string; Host string; RawPath string; Path string; OpaquePath bool; RawQuery string; Fragment string }
	func (url *"http".URL) IsAbs () bool
	func (base *"http".URL) ParseURL (ref string) (? *"http".URL, ? "os".Error)
	func (u *"http".URL) Query () "http".Values
	func (base *"http".URL) ResolveReference (ref *"http".URL) *"http".URL
	func (url *"http".URL) String () string
	type "http".Cookie struct { Name string; Value string; Path string; Domain string; Expires "time".Time; RawExpires string; MaxAge int; Secure bool; HttpOnly bool; Raw string; Unparsed []string }
	import time "time" // indirect
	type "time".Time struct { Year int64; Month int; Day int; Hour int; Minute int; Second int; Weekday int; ZoneOffset int; Zone string }
	func (t *"time".Time) Format (layout string) string
	func (t *"time".Time) Seconds () int64
	func (t *"time".Time) String () string
	type "io".ReadCloser interface { Close() "os".Error; Read(p []uint8) (n int, err "os".Error) }
	import tls "crypto/tls" // indirect
	type "crypto/tls".ConnectionState struct { HandshakeComplete bool; CipherSuite uint16; NegotiatedProtocol string; NegotiatedProtocolIsMutual bool; PeerCertificates []*"crypto/x509".Certificate; VerifiedChains [][]*"crypto/x509".Certificate }
	import x509 "crypto/x509" // indirect
	import pkix "crypto/x509/pkix" // indirect
	type "crypto/x509/pkix".CertificateList struct { TBSCertList "crypto/x509/pkix".TBSCertificateList; SignatureAlgorithm "crypto/x509/pkix".AlgorithmIdentifier; SignatureValue "asn1".BitString }
	func (certList *"crypto/x509/pkix".CertificateList) HasExpired (currentTimeSeconds int64) bool
	type "crypto/x509/pkix".TBSCertificateList struct { Raw "asn1".RawContent; Version int :"optional,default:2"; Signature "crypto/x509/pkix".AlgorithmIdentifier; Issuer "crypto/x509/pkix".RDNSequence; ThisUpdate *"time".Time; NextUpdate *"time".Time; RevokedCertificates []"crypto/x509/pkix".RevokedCertificate :"optional"; Extensions []"crypto/x509/pkix".Extension :"tag:0,optional,explicit" }
	import asn1 "asn1" // indirect
	type "asn1".RawContent []uint8
	type "crypto/x509/pkix".AlgorithmIdentifier struct { Algorithm "asn1".ObjectIdentifier; Parameters "asn1".RawValue :"optional" }
	type "asn1".ObjectIdentifier []int
	func (oi "asn1".ObjectIdentifier) Equal (other "asn1".ObjectIdentifier) bool
	type "asn1".RawValue struct { Class int; Tag int; IsCompound bool; Bytes []uint8; FullBytes []uint8 }
	type "crypto/x509/pkix".RDNSequence []"crypto/x509/pkix".RelativeDistinguishedNameSET
	type "crypto/x509/pkix".RelativeDistinguishedNameSET []"crypto/x509/pkix".AttributeTypeAndValue
	type "crypto/x509/pkix".AttributeTypeAndValue struct { Type "asn1".ObjectIdentifier; Value interface { } }
	type "crypto/x509/pkix".RevokedCertificate struct { SerialNumber *"big".Int; RevocationTime *"time".Time; Extensions []"crypto/x509/pkix".Extension :"optional" }
	import big "big" // indirect
	import fmt "fmt" // indirect
	type "fmt".State interface { Flag(c int) bool; Precision() (prec int, ok bool); Width() (wid int, ok bool); Write(b []uint8) (ret int, err "os".Error) }
	import rand "rand" // indirect
	type "rand".Rand struct { src "rand".Source }
	func (r *"rand".Rand) ExpFloat64 () float64
	func (r *"rand".Rand) Float32 () float32
	func (r *"rand".Rand) Float64 () float64
	func (r *"rand".Rand) Int () int
	func (r *"rand".Rand) Int31 () int32
	func (r *"rand".Rand) Int31n (n int32) int32
	func (r *"rand".Rand) Int63 () int64
	func (r *"rand".Rand) Int63n (n int64) int64
	func (r *"rand".Rand) Intn (n int) int
	func (r *"rand".Rand) NormFloat64 () float64
	func (r *"rand".Rand) Perm (n int) []int
	func (r *"rand".Rand) Seed (seed int64)
	func (r *"rand".Rand) Uint32 () uint32
	type "rand".Source interface { Int63() int64; Seed(seed int64) }
	type "fmt".ScanState interface { Read(buf []uint8) (n int, err "os".Error); ReadRune() (rune int, size int, err "os".Error); Token(skipSpace bool, f func(? int) bool) (token []uint8, err "os".Error); UnreadRune() "os".Error; Width() (wid int, ok bool) }
	type "io".RuneScanner interface { ReadRune() (rune int, size int, err "os".Error); UnreadRune() "os".Error }
	type "big".Int struct { neg bool; abs "big".nat }
	func (z *"big".Int) Abs (x *"big".Int) *"big".Int
	func (z *"big".Int) Add (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) And (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) AndNot (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Binomial (n int64, k int64) *"big".Int
	func (z *"big".Int) Bit (i int) uint
	func (z *"big".Int) BitLen () int
	func (z *"big".Int) Bytes () []uint8
	func (x *"big".Int) Cmp (y *"big".Int) int
	func (z *"big".Int) Div (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) DivMod (x *"big".Int, y *"big".Int, m *"big".Int) (? *"big".Int, ? *"big".Int)
	func (z *"big".Int) Exp (x *"big".Int, y *"big".Int, m *"big".Int) *"big".Int
	func (x *"big".Int) Format (s "fmt".State, ch int)
	func (z *"big".Int) GobDecode (buf []uint8) "os".Error
	func (z *"big".Int) GobEncode () (? []uint8, ? "os".Error)
	func (x *"big".Int) Int64 () int64
	func (z *"big".Int) Lsh (x *"big".Int, n uint) *"big".Int
	func (z *"big".Int) Mod (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) ModInverse (g *"big".Int, p *"big".Int) *"big".Int
	func (z *"big".Int) Mul (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) MulRange (a int64, b int64) *"big".Int
	func (z *"big".Int) Neg (x *"big".Int) *"big".Int
	func (z *"big".Int) Not (x *"big".Int) *"big".Int
	func (z *"big".Int) Or (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Quo (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) QuoRem (x *"big".Int, y *"big".Int, r *"big".Int) (? *"big".Int, ? *"big".Int)
	func (z *"big".Int) Rand (rnd *"rand".Rand, n *"big".Int) *"big".Int
	func (z *"big".Int) Rem (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Rsh (x *"big".Int, n uint) *"big".Int
	func (z *"big".Int) Scan (s "fmt".ScanState, ch int) "os".Error
	func (z *"big".Int) Set (x *"big".Int) *"big".Int
	func (z *"big".Int) SetBit (x *"big".Int, i int, b uint) *"big".Int
	func (z *"big".Int) SetBytes (buf []uint8) *"big".Int
	func (z *"big".Int) SetInt64 (x int64) *"big".Int
	func (z *"big".Int) SetString (s string, base int) (? *"big".Int, ? bool)
	func (x *"big".Int) Sign () int
	func (x *"big".Int) String () string
	func (z *"big".Int) Sub (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Xor (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) scan (r "io".RuneScanner, base int) (? *"big".Int, ? int, ? "os".Error)
	type "big".Word uintptr
	type "big".nat []"big".Word
	func (z "big".nat) add (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) and (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) andNot (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) bit (i uint) uint
	func (x "big".nat) bitLen () int
	func (z "big".nat) bytes (buf []uint8) int
	func (z "big".nat) clear ()
	func (x "big".nat) cmp (y "big".nat) int
	func (x "big".nat) decimalString () string
	func (z "big".nat) div (z2 "big".nat, u "big".nat, v "big".nat) (q "big".nat, r "big".nat)
	func (z "big".nat) divLarge (u "big".nat, uIn "big".nat, v "big".nat) (q "big".nat, r "big".nat)
	func (z "big".nat) divW (x "big".nat, y "big".Word) (q "big".nat, r "big".Word)
	func (z "big".nat) expNN (x "big".nat, y "big".nat, m "big".nat) "big".nat
	func (z "big".nat) make (n int) "big".nat
	func (x "big".nat) modW (d "big".Word) "big".Word
	func (z "big".nat) mul (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) mulAddWW (x "big".nat, y "big".Word, r "big".Word) "big".nat
	func (z "big".nat) mulRange (a uint64, b uint64) "big".nat
	func (z "big".nat) norm () "big".nat
	func (z "big".nat) or (x "big".nat, y "big".nat) "big".nat
	func (x "big".nat) powersOfTwoDecompose () (q "big".nat, k int)
	func (n "big".nat) probablyPrime (reps int) bool
	func (z "big".nat) random (rand *"rand".Rand, limit "big".nat, n int) "big".nat
	func (z "big".nat) scan (r "io".RuneScanner, base int) (? "big".nat, ? int, ? "os".Error)
	func (z "big".nat) set (x "big".nat) "big".nat
	func (z "big".nat) setBit (x "big".nat, i uint, b uint) "big".nat
	func (z "big".nat) setBytes (buf []uint8) "big".nat
	func (z "big".nat) setUint64 (x uint64) "big".nat
	func (z "big".nat) setWord (x "big".Word) "big".nat
	func (z "big".nat) shl (x "big".nat, s uint) "big".nat
	func (z "big".nat) shr (x "big".nat, s uint) "big".nat
	func (x "big".nat) string (charset string) string
	func (z "big".nat) sub (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) xor (x "big".nat, y "big".nat) "big".nat
	type "crypto/x509/pkix".Extension struct { Id "asn1".ObjectIdentifier; Critical bool :"optional"; Value []uint8 }
	type "asn1".BitString struct { Bytes []uint8; BitLength int }
	func (b "asn1".BitString) At (i int) int
	func (b "asn1".BitString) RightAlign () []uint8
	type "crypto/x509".SignatureAlgorithm int
	import rsa "crypto/rsa" // indirect
	type "crypto/rsa".PrivateKey struct { ? "crypto/rsa".PublicKey; D *"big".Int; Primes []*"big".Int; Precomputed "crypto/rsa".PrecomputedValues }
	func (priv *"crypto/rsa".PrivateKey) Precompute ()
	func (priv *"crypto/rsa".PrivateKey) Validate () "os".Error
	type "crypto/rsa".PublicKey struct { N *"big".Int; E int }
	type "crypto/rsa".PrecomputedValues struct { Dp *"big".Int; Dq *"big".Int; Qinv *"big".Int; CRTValues []"crypto/rsa".CRTValue }
	type "crypto/rsa".CRTValue struct { Exp *"big".Int; Coeff *"big".Int; R *"big".Int }
	type "crypto/x509".VerifyOptions struct { DNSName string; Intermediates *"crypto/x509".CertPool; Roots *"crypto/x509".CertPool; CurrentTime int64 }
	type "crypto/x509".CertPool struct { bySubjectKeyId map[string] []int; byName map[string] []int; certs []*"crypto/x509".Certificate }
	func (s *"crypto/x509".CertPool) AddCert (cert *"crypto/x509".Certificate)
	func (s *"crypto/x509".CertPool) AppendCertsFromPEM (pemCerts []uint8) bool
	func (s *"crypto/x509".CertPool) findVerifiedParents (cert *"crypto/x509".Certificate) []int
	type "crypto/x509".Certificate struct { Raw []uint8; RawTBSCertificate []uint8; RawSubjectPublicKeyInfo []uint8; Signature []uint8; SignatureAlgorithm "crypto/x509".SignatureAlgorithm; PublicKeyAlgorithm "crypto/x509".PublicKeyAlgorithm; PublicKey interface { }; Version int; SerialNumber *"big".Int; Issuer "crypto/x509/pkix".Name; Subject "crypto/x509/pkix".Name; NotBefore *"time".Time; NotAfter *"time".Time; KeyUsage "crypto/x509".KeyUsage; ExtKeyUsage []"crypto/x509".ExtKeyUsage; UnknownExtKeyUsage []"asn1".ObjectIdentifier; BasicConstraintsValid bool; IsCA bool; MaxPathLen int; SubjectKeyId []uint8; AuthorityKeyId []uint8; DNSNames []string; EmailAddresses []string; PermittedDNSDomainsCritical bool; PermittedDNSDomains []string; PolicyIdentifiers []"asn1".ObjectIdentifier }
	func (c *"crypto/x509".Certificate) CheckCRLSignature (crl *"crypto/x509/pkix".CertificateList) "os".Error
	func (c *"crypto/x509".Certificate) CheckSignature (algo "crypto/x509".SignatureAlgorithm, signed []uint8, signature []uint8) "os".Error
	func (c *"crypto/x509".Certificate) CheckSignatureFrom (parent *"crypto/x509".Certificate) "os".Error
	func (c *"crypto/x509".Certificate) CreateCRL (rand "io".Reader, priv *"crypto/rsa".PrivateKey, revokedCerts []"crypto/x509/pkix".RevokedCertificate, now *"time".Time, expiry *"time".Time) (crlBytes []uint8, err "os".Error)
	func (c *"crypto/x509".Certificate) Equal (other *"crypto/x509".Certificate) bool
	func (c *"crypto/x509".Certificate) Verify (opts "crypto/x509".VerifyOptions) (chains [][]*"crypto/x509".Certificate, err "os".Error)
	func (c *"crypto/x509".Certificate) VerifyHostname (h string) "os".Error
	func (c *"crypto/x509".Certificate) buildChains (cache map[int] [][]*"crypto/x509".Certificate, currentChain []*"crypto/x509".Certificate, opts *"crypto/x509".VerifyOptions) (chains [][]*"crypto/x509".Certificate, err "os".Error)
	func (c *"crypto/x509".Certificate) isValid (certType int, opts *"crypto/x509".VerifyOptions) "os".Error
	type "crypto/x509".PublicKeyAlgorithm int
	type "crypto/x509/pkix".Name struct { Country []string; Organization []string; OrganizationalUnit []string; Locality []string; Province []string; StreetAddress []string; PostalCode []string; SerialNumber string; CommonName string }
	func (n *"crypto/x509/pkix".Name) FillFromRDNSequence (rdns *"crypto/x509/pkix".RDNSequence)
	func (n "crypto/x509/pkix".Name) ToRDNSequence () "crypto/x509/pkix".RDNSequence
	type "crypto/x509".KeyUsage int
	type "crypto/x509".ExtKeyUsage int
	func "".handler (wr "http".ResponseWriter, r *"http".Request)
	type "twist".Context struct { ? *"twist".Writer; Context *"appengine".Context; Request *"http".Request; Root *"twist".Item }
	type "twist".Template struct { name string; Html string; Id string; parentId string; Writer *"twist".Writer }
	func (t *"twist".Template) FullId () string
	func (t *"twist".Template) GetParentId () string
	func (t *"twist".Template) GetTemplateJavascript () string
	type "twist".Writer struct { Output "http".ResponseWriter; Buffer string; Templates []"twist".Template; IsRoot bool }
	func (w *"twist".Writer) RegisterTemplate (t "twist".Template)
	func (w *"twist".Writer) Send ()
	func (w *"twist".Writer) sendFragment ()
	func (w *"twist".Writer) sendPage ()
	import appengine "appengine" // indirect
	type "appengine".Context interface { AppID() string; Call(service string, method string, in interface { }, out interface { }) "os".Error; Criticalf(format string, args ...interface { }); Debugf(format string, args ...interface { }); Errorf(format string, args ...interface { }); FullyQualifiedAppID() string; Infof(format string, args ...interface { }); Request() interface { }; Warningf(format string, args ...interface { }) }
	type "twist".Item struct { id string; template *"twist".Template; writer *"twist".Writer; Value string }
	func (i *"twist".Item) Append (o ...interface { })
	func (i *"twist".Item) Attr (attrib string, o interface { })
	func (i *"twist".Item) Click (handlerFunc interface { }, values interface { }, c "appengine".Context)
	func (i *"twist".Item) Css (attrib string, o interface { })
	func (i *"twist".Item) FullId () string
	func (i *"twist".Item) Html (o ...interface { })
	func (i *"twist".Item) Link (handlerFunc interface { }, values interface { }, c "appengine".Context)
	func (i *"twist".Item) attrCss (command string, attrib string, o interface { })
	func (i *"twist".Item) attrCssGeneric (command string, attrib string, val string)
	func (i *"twist".Item) generic (replace bool, o []interface { })
	func (i *"twist".Item) htmlGeneric (replace bool, s string)
	func (i *"twist".Item) templateGeneric (replace bool, t *"twist".Template)
	type "".Page1_T struct { Val1 "twist".String; Val2 "twist".Int }
	type "twist".String string
	func (v "twist".String) String () string
	func (v "twist".String) Value () string
	type "twist".Int int
	func (v "twist".Int) String () string
	func (v "twist".Int) Value () int
	type "".MyClickNew_T struct { Val1 "twist".String; Span1 *"twist".Item; Img1 *"twist".Item; Text1 *"twist".Item }
	type "".MyClick_T struct { Span1 *"twist".Item; Text1 *"twist".Item; Img1 *"twist".Item }
	type "".MyClickFoo_T struct { Span1 *"twist".Item; Text1 *"twist".Item }
	type "".Functions int
	func (f "".Functions) MyClick (c "twist".Context, v "".MyClick_T)
	func (f "".Functions) MyClickFoo (c "twist".Context, v "".MyClickFoo_T)
	func (f "".Functions) MyClickNew (c "twist".Context, v "".MyClickNew_T)
	func (f "".Functions) Page1 (c "twist".Context, v "".Page1_T)
	func (f "".Functions) Root (c "twist".Context)
	type "".ClickLink_T struct { Val1 "twist".String }
	var "".initdoneÂ· uint8
	func "".init ()

$$  // local types

$$

!
~ E</ ~ E<Users ~ E<d.brophy ~ E<Projects ~ E<twist ~ E<web ~ E<handler ~ E<handler.go 7      ~ E<http.a 7     ÿÿÿÿA~ E<twist.8 7     ÿÿÿÿA7 m     ~ ="".initÂ·1 ~ =type.func() Ü 	   =   A~ =go.string."/" a 
   =~ Shttp.pattern a 
   S! 
     y 
     y 
     ~ ="".handler ~ =type.func(http.ResponseWriter, *http.Request) p 
   = D~ Shttp.handler p 
      S~ =http.HandleFunc ~ =	type.func(string, func(http.ResponseWriter, *http.Request))  
    =	£      Ü    =E      Ap    AS~ =
""._func_001 ~ =type.func(uintptr) interface { } p    = 
Dp       S~ =runtime.closure ~ =type.func(int, func(uintptr) interface { }) func() interface { }      =p       S~ Stwist.getFunctionsType p       S~ @"".wr ~ =type.http.ResponseWriter a    @~ Stwist.wr a    S!      y      y      ~ @"".r ~ =type.*http.Request p       @~ Stwist.r p       S~ =twist.Server ~ =type.func(http.ResponseWriter, *http.Request, func() interface { })      =£      ~ ="".FunctionsÂ·Root ~ =type.method(f "".Functions)func(twist.Context) Ü    =E      A~ @"".c ~ =type.twist.Context a       @p    R~ Stwist.w p    S~ =go.string."main" a    =~ Stwist.id a       S!      y      y      ~ =twist.Test ~ =type.func(*twist.Writer, string) *twist.Test_T      =p       S~ ? "".test ~ =!type.*twist.Test_T p    ÿÿÿ ?!p       AS~ ="runtime.new ~ =#type.func(int32) *[1]interface { }      "=#p       S~ ?$"".autotmp_0004 p       A¬ÿÿÿ$?p       A°ÿÿÿ$?p    ¨ÿÿÿ$?~ =%type.uint8 ~ S&runtime.typ p    = !D%&Sp    ÿÿÿ ?!~ S'runtime.elem p       'S~ =(runtime.convT2E ~ =)type.func(*uint8, *twist.Test_T) interface { }      (=)a       Sp    a    ¨ÿÿÿ$?p    R!      y      y      a       @p    	       Ap    O~ S*twist.i p    *Sa    ¨ÿÿÿ$?~ S+twist.o a       +S!      y      y      y      ~ =,twist.*ItemÂ·Html      ,=p       AS     "=#p       S~ ?-"".autotmp_0006 p       AÜÿÿÿ-?p       Aàÿÿÿ-?p    Øÿÿÿ-?~ =.type.string p    = .D%&S~ =/go.string."Hello world!" a    /=a       'S!      y      y      ~ =0type.func(*uint8, string) interface { }      (=0a       Sp    a    Øÿÿÿ-?p    R!      y      y      p    ÿÿÿ ?!	       Ap    Op    *Sa    Øÿÿÿ-?a       +S!      y      y      y           ,=p    = .D%&S~ =1go.string."foo" a    1=a       'S!      y      y           (=0a       Sp    a       +S!      y      y      p    ÿÿÿ ?!	       Ap    Op    *S~ =go.string."value" a    =~ Stwist.attrib a       S!      y      y      ~ =twist.*ItemÂ·Attr      =a !      @p !   Rp !   S~ =go.string."dave" a !   =a !      S! !     y !     y !     ~ =twist.Inner ~ =type.func(*twist.Writer, string) *twist.Inner_T  !    =p !      S~ ?"".inner ~ =type.*twist.Inner_T p !   Èÿÿÿ?p "      AS "    "=#p "      S~ ?	"".autotmp_0008 p "      A ÿÿÿ	?p "      A¤ÿÿÿ	?p "   ÿÿÿ	?p "   = D%&Sp "   Èÿÿÿ?p "      'S~ =
type.func(*uint8, *twist.Inner_T) interface { }  "    (=
a "      Sp "   a "   ÿÿÿ	?p "   R! "     y "     y "     p "   ÿÿÿ ?!	 "      Ap "   Op "   *Sa "   ÿÿÿ	?a "      +S! "     y "     y "     y "      "    ,=p $      AS $    "=#p $      S~ ?"".autotmp_0010 p $      AÐÿÿÿ?p $      AÔÿÿÿ?p $   Ìÿÿÿ?p $   = .D%&S~ =go.string."BAR" a $   =a $      'S! $     y $     y $      $    (=0a $      Sp $   a $   Ìÿÿÿ?p $   R! $     y $     y $     p $   Èÿÿÿ?	 $      Ap $   Op $   *Sa $   Ìÿÿÿ?a $      +S! $     y $     y $     y $      $    ,=p %   = .D%&S~ =go.string."http://pix-eu.dontstayin.com/53812cd7-33c7-44ac-a766-9710e4f14077.jpg" a %   =a %      'S! %     y %     y %      %    (=0a %      Sp %   a %      +S! %     y %     y %     p %   Èÿÿÿ?	 %      Ap %   Op %   *S~ =go.string."src" a %   =a %      S! %     y %     y %      %    =~ =type.int p &   = D%&Sp &   d   A   'S~ =type.func(*uint8, int) interface { }  &    (=a &      Sp &   p &   a &      +SÐ &     	 &      A	 &      Ap &      A	¡ &     y &     ! &     p &   Èÿÿÿ?	 &      Ap &   Op &   *S~ =go.string."width" a &   =a &      S! &     y &     y &      &    =p '   = D%&Sp '   d   A   'S '    (=a '      Sp '   p '   a '      +SÐ '     	 '      A	 '      Ap '      A	¡ '     y '     ! '     p '   Èÿÿÿ?	 '      Ap '   Op '   *S~ =go.string."height" a '   =a '      S! '     y '     y '      '    =p '   Èÿÿÿ?
~ ="".statictmp_0013 ~ =go.string."testing" - )   ;==    D- )   ;   =   Aa )   =~ ?"".autotmp_0012 a )   ´ÿÿÿ?! )     p )      A	¡ )     y )     p )   
	 )      Ap )   Oa )   ´ÿÿÿ?p )   	 )      Ap )   Op )   
	 )      Ap )   Oa )   ´ÿÿÿ?p )   	 )      Ap )   Op )   ÿÿÿ ?!	 )      Ap )   Oa )   ´ÿÿÿ?p )   	 )      Ap )   O~ =type.func("".Functions, twist.Context, "".MyClickNew_T) p )   = D%&S~ ="".FunctionsÂ·MyClickNew p )   = Dp )      'S~ =type.func(*uint8, func("".Functions, twist.Context, "".MyClickNew_T)) interface { }  )    (=a )      Sp )   ~ ?"".autotmp_0014 a )   ðÿÿÿ?! )     y )     y )     ~ =type."".MyClickNew_T p )   = D%&Sa )   ´ÿÿÿ?a )      'S! )     p )      A	¡ )     y )     ~ =type.func(*uint8, "".MyClickNew_T) interface { }  )    (=a )      Sp )   ~ Stwist.values a )      S! )     y )     y )     p )   Èÿÿÿ?	 )      Ap )   Op )   *Sa )   ðÿÿÿ?~ Stwist.handlerFunc a )      S! )     y )     y )     ~ @"".c ~ =type.twist.Context a )      @p )   	 )      Ap )   O~ S twist.c a )       S! )     y )     y )     ~ =!twist.*ItemÂ·Click  )    !=~ =""".statictmp_0016 ~ =#go.string."ooooooh!" - +   ;"==    #D- +   ;   "=   A- +   ;   "=,   Aa +   "=~ ?$"".autotmp_0015 a +   äÿÿÿ$?! +     y +     y +     y +     ~ =%type.func("".Functions, twist.Context, "".Page1_T) ~ =&type.uint8 ~ S'runtime.typ p +   = %D&'S~ =("".FunctionsÂ·Page1 p +   = (D%~ S)runtime.elem p +      )S~ =*runtime.convT2E ~ =+type.func(*uint8, func("".Functions, twist.Context, "".Page1_T)) interface { }  +    *=+a +      Sp +   ~ ?,"".autotmp_0017 a +   øÿÿÿ,?! +     y +     y +     ~ =-type."".Page1_T p +   = -D&'Sa +   äÿÿÿ$?a +      )S! +     y +     y +     y +     ~ =.type.func(*uint8, "".Page1_T) interface { }  +    *=.a +      Sp +   a +      S! +     y +     y +     p +   Èÿÿÿ?	 +      Ap +   O~ S/twist.i p +   /Sa +   øÿÿÿ,?a +      S! +     y +     y +     a +      @p +   	 +      Ap +   Oa +       S! +     y +     y +     ~ =0twist.*ItemÂ·Link  +    0=a -      @p -   R~ S1twist.w p -   1S~ =twist.*WriterÂ·Send  -    =£ /     ~ =type.method(f "".Functions)func(twist.Context, "".Page1_T) Ü 9   (=E@       Ap ;      AS~ =runtime.new ~ =type.func(int32) *[1]interface { }  ;    =p ;      S~ ?"".autotmp_0115 p ;      Aøÿÿÿ?p ;      Aüÿÿÿ?p ;   ôÿÿÿ?~ @"".v a ;      @-~ Stwist.v a ;   S! ;     y ;     y ;     ~ =twist.StringÂ·Value  ;    =a ;      Sp ;   ~ ?	"".autotmp_0114 a ;   ìÿÿÿ	?! ;     y ;     y ;     a ;      @-p ;   	 ;      Ap ;   Op ;   S~ =
twist.IntÂ·String  ;    
=a ;      Sp ;   a ;      S! ;     y ;     y ;     p ;      AS~ =go.string."Hello World." a ;   =a ;      S! ;     y ;     y ;     a ;   ìÿÿÿ	?a ;      S! ;     y ;     y ;     ~ =go.string." - " a ;   =a ;      S! ;     y ;     y ;     ~ =runtime.concatstring ~ =type.func(int, string, string, string, string) string  ;    =a ;   $   Sp ;   a ;      )S! ;     y ;     y ;     ~ =type.string p ;   = D&'S~ =type.func(*uint8, string) interface { }  ;    *=a ;      Sp ;   a ;   ôÿÿÿ?p ;   R! ;     y ;     y ;     a ;      @p ;   	 ;      Ap ;   Op ;   /Sa ;   ôÿÿÿ?~ Stwist.o a ;      S! ;     y ;     y ;     y ;     ~ =twist.*ItemÂ·Html  ;    =a <      @p <   Rp <   1S <    =£ >     ~ =type.method(f "".Functions)func(twist.Context, "".MyClickNew_T) Ü K   =E(   (   Ap M   = D&'S~ =go.string."10px solid #ff0000" a M   =a M      )S! M     y M     y M      M    *=a M      Sp M   a M      S! M     y M     y M     a M      @p M   	 M      Ap M   Op M   /S~ =go.string."border" a M   =~ Stwist.attrib a M      S! M     y M     y M     ~ =twist.*ItemÂ·Css  M    =p N      AS N    =p N      S~ ?"".autotmp_0139 p N      Aøÿÿÿ?p N      Aüÿÿÿ?p N   ôÿÿÿ?p N      AS~ =go.string."WHOOOOOOPPPPPPPPP!!!!" a N   =a N      S! N     y N     y N     a N      @p N   a N      S! N     y N     y N     ~ =type.func(int, string, string) string  N    =a N      Sp N   a N      )S! N     y N     y N     ~ =type.twist.String p N   = D&'S~ =type.func(*uint8, twist.String) interface { }  N    *=a N      Sp N   a N   ôÿÿÿ?p N   R! N     y N     y N     ~ =type."".MyClickNew_T a N      @p N   	 N      Ap N   Op N   /Sa N   ôÿÿÿ?a N      S! N     y N     y N     y N      N    =a P      @p P   Rp P   1S P    =£ Q     ~ ="".FunctionsÂ·MyClick ~ =type.method(f "".Functions)func(twist.Context, "".MyClick_T) Ü Y   =E(       Ap [   = D&'Sa [   =a [      )S! [     y [     y [      [    *=a [      Sp [   a [      S! [     y [     y [     ~ = type."".MyClick_T a [      @ p [   	 [      Ap [   Op [   /Sa [   =a [      S! [     y [     y [      [    =p \      AS \    =p \      S~ ?!"".autotmp_0161 p \      Aøÿÿÿ!?p \      Aüÿÿÿ!?p \   ôÿÿÿ!?p \      AS~ ="go.string."WHOOOOOOPPPPPPPPP!!!!! " a \   "=a \      S! \     y \     y \     a \      @ p \   	 \      Ap \   O	 \      Aa \      S! \     y \     y \      \    =a \      Sp \   a \      )S! \     y \     y \     p \   = D&'S \    *=a \      Sp \   a \   ôÿÿÿ!?p \   R! \     y \     y \     a \      @ p \   Rp \   /Sa \   ôÿÿÿ!?a \      S! \     y \     y \     y \      \    =~ @#"".c ~ =$type.twist.Context a ^      #@$p ^   Rp ^   1S ^    =£ _     ~ =%"".FunctionsÂ·MyClickFoo ~ =&type.method(f "".Functions)func(twist.Context, "".MyClickFoo_T) Ü f   %=&E(      Ap h      AS h    =p h      S~ ?'"".autotmp_0184 p h      Aøÿÿÿ'?p h      Aüÿÿÿ'?p h   ôÿÿÿ'?p h      AS~ =(go.string."FOOOOOOOOOOO " a h   (=a h      S! h     y h     y h     ~ =)type."".MyClickFoo_T a h      @)p h   	 h      Ap h   O	 h      Aa h      S! h     y h     y h      h    =a h      Sp h   ~ S*runtime.elem a h      *S! h     y h     y h     ~ =+type.uint8 ~ S,runtime.typ p h   = D+,S~ =-runtime.convT2E  h    -=a h      Sp h   a h   ôÿÿÿ'?p h   R! h     y h     y h     a h      @)p h   Rp h   /Sa h   ôÿÿÿ'?a h      S! h     y h     y h     y h      h    =a i      #@$p i   Rp i   1S i    =£ k     ~ =."".init ~ =/type.func() Ü k   .=/A~ =0"".initdoneÂ· s k   0=+	W k    £  <W k    ®  <% k   	AO k    ¢  <W k    §  <W k    ¬  <p k   	% k   	   AX k    ¦  <£ k     W k    ¬  <~ =1runtime.throwinit  k    1=/W k    ®  <o k      A0=+~ =twist.init  k    =/~ =http.init  k    =/~ ="".initÂ·1  k    =/o k      A0=+£ k     £ k     ~ =""._func_001 ~ =type.func(uintptr) interface { } Ü    =E      A~ =type."".Functions p    = D+,Sp    A   *S~ =type.func(*uint8, "".Functions) interface { }      -=a       Sp    p    ~ @""..noname a       @!      y      y      £      ~ =	runtime.throwreturn      	=£      ~ =
"".statictmp_0013 5 )   ;
=   A~ ="".statictmp_0016 5 +   ;=   A5 k   0=+   A~ =type.*runtime.FuncType - k   ;/== D- k   ;   /==    /D- k   ;   /=   A- k   ;   /=ö¼öA- k   ;   /=   A- k   ;   /=   A- k   ;   /=   A- k   ;   /=   A~ =go.string."func()" - k   ;   /== D~ =weak.type.*func() - k   ;   /== D- k   ;    /=A- k   ;$   /== <   /D- k   ;(   /=A- k   ;,   /=A- k   ;0   /== <   /D- k   ;4   /=A- k   ;8   /=A5 k   ;
/=<   A~ =type.func(http.ResponseWriter, *http.Request) - k   ;== D- k   ;   ==    D- k   ;   =   A- k   ;   =ôA- k   ;   =   A- k   ;   =   A- k   ;   =   A- k   ;   =   A~ =go.string."func(http.ResponseWriter, *http.Request)" - k   ;   == D~ =weak.type.*func(http.ResponseWriter, *http.Request) - k   ;   == D- k   ;    =A- k   ;$   == <   D- k   ;(   =   A- k   ;,   =   A- k   ;0   == D   D- k   ;4   =A- k   ;8   =A~ =type.http.ResponseWriter - k   ;<   == D~ =type.*http.Request - k   ;@   == D5 k   ;
=D   A~ =type.func(string, func(http.ResponseWriter, *http.Request)) - k   ;== D- k   ;   ==    D- k   ;   =   A- k   ;   =úãA- k   ;   =   A- k   ;   =   A- k   ;   =   A- k   ;   =   A~ =go.string."func(string, func(http.ResponseWriter, *http.Request))" - k   ;   == D~ =weak.type.*func(string, func(http.ResponseWriter, *http.Request)) - k   ;   == D- k   ;    =A- k   ;$   == <   D- k   ;(   =   A- k   ;,   =   A- k   ;0   == D   D- k   ;4   =A- k   ;8   =A~ =type.string - k   ;<   == D- k   ;@   == D5 k   ;
=D   A~ =type.interface { } ~ =type.*runtime.InterfaceType - k   ;== D- k   ;   ==    D- k   ;   =   A- k   ;   =ô¤BóA- k   ;   =   A- k   ;   =   A- k   ;   =   A- k   ;   =   A~ =go.string."interface { }" - k   ;   == D~ =weak.type.*interface { } - k   ;   == D- k   ;    == ,   D- k   ;$   =A- k   ;(   =A5 k   ;
=,   A- k   ;== D- k   ;   ==    D- k   ;   =   A- k   ;   =°s}=A- k   ;   =   A- k   ;   =   A- k   ;   =   A- k   ;   =   A~ =go.string."func(uintptr) interface { }" - k   ;   == D~ =weak.type.*func(uintptr) interface { } - k   ;   == D- k   ;    =A- k   ;$   == <   D- k   ;(   =   A- k   ;,   =   A- k   ;0   == @   D- k   ;4   =   A- k   ;8   =   A~ =type.uintptr - k   ;<   == D- k   ;@   == D5 k   ;
=D   A~ =type.func() interface { } - k   ;== D- k   ;   ==    D- k   ;   =   A- k   ;   =,êGA- k   ;   =   A- k   ;   =   A- k   ;   =   A- k   ;   =   A~ = go.string."func() interface { }" - k   ;   ==  D~ =!weak.type.*func() interface { } - k   ;   == !D- k   ;    =A- k   ;$   == <   D- k   ;(   =A- k   ;,   =A- k   ;0   == <   D- k   ;4   =   A- k   ;8   =   A- k   ;<   == D5 k   ;
=@   A~ ="type.func(int, func(uintptr) interface { }) func() interface { } - k   ;"== D- k   ;   "==    "D- k   ;   "=   A- k   ;   "=ÉÄ_uA- k   ;   "=   A- k   ;   "=   A- k   ;   "=   A- k   ;   "=   A~ =#go.string."func(int, func(uintptr) interface { }) func() interface { }" - k   ;   "== #D~ =$weak.type.*func(int, func(uintptr) interface { }) func() interface { } - k   ;   "== $D- k   ;    "=A- k   ;$   "== <   "D- k   ;(   "=   A- k   ;,   "=   A- k   ;0   "== D   "D- k   ;4   "=   A- k   ;8   "=   A~ =%type.int - k   ;<   "== %D- k   ;@   "== D- k   ;D   "== D5 k   ;
"=H   A~ =&type.func(http.ResponseWriter, *http.Request, func() interface { }) - k   ;&== D- k   ;   &==    &D- k   ;   &=   A- k   ;   &= ÇA- k   ;   &=   A- k   ;   &=   A- k   ;   &=   A- k   ;   &=   A~ ='go.string."func(http.ResponseWriter, *http.Request, func() interface { })" - k   ;   &== 'D~ =(weak.type.*func(http.ResponseWriter, *http.Request, func() interface { }) - k   ;   &== (D- k   ;    &=A- k   ;$   &== <   &D- k   ;(   &=   A- k   ;,   &=   A- k   ;0   &== H   &D- k   ;4   &=A- k   ;8   &=A- k   ;<   &== D- k   ;@   &== D- k   ;D   &== D5 k   ;
&=H   A~ =)type.*"".Functions ~ =*type.*runtime.PtrType - k   ;)== *D- k   ;   )==    )D- k   ;   )=   A- k   ;   )=ç"IA- k   ;   )=   A- k   ;   )=   A- k   ;   )=   A- k   ;   )=   A~ =+go.string."*handler.Functions" - k   ;   )== +D~ =,weak.type.**"".Functions - k   ;   )== ,D- k   ;    )== D       ~ =-"".*FunctionsÂ·Root ~ =.type.func(*"".Functions, twist.Context) Ü    -=.E      A~ @/""..this p    /@)p    R~ S0"".f p    0S~ @1"".c ~ =type.twist.Context a       1@~ S"".c a       S!      p       A	¡      y      ~ ="".FunctionsÂ·Root      =£      ~ ="".*FunctionsÂ·Page1 ~ =type.func(*"".Functions, twist.Context, "".Page1_T) Ü    =E        Ap    /@)p    Rp    0S~ @"".c a       @~ S"".c a       S!      p       A	¡      y      ~ @"".v ~ =	type."".Page1_T a       @	~ S
"".v a       
S!      y      y      y      ~ ="".FunctionsÂ·Page1      =£      ~ ="".*FunctionsÂ·MyClickNew ~ =type.func(*"".Functions, twist.Context, "".MyClickNew_T) Ü    =E(   (   Ap    /@)p    Rp    0S~ @"".c a       @~ S"".c a       S!      p       A	¡      y      ~ @"".v ~ =type."".MyClickNew_T a       @~ S"".v a       S!      p       A	¡      y      ~ ="".FunctionsÂ·MyClickNew      =£      ~ ="".*FunctionsÂ·MyClick ~ =type.func(*"".Functions, twist.Context, "".MyClick_T) Ü    =E        Ap    /@)p    Rp    0S~ @"".c a       @~ S"".c a       S!      p       A	¡      y      ~ @"".v ~ =type."".MyClick_T a       @~ S"".v a       S!      y      y      y      ~ ="".FunctionsÂ·MyClick      =£      ~ ="".*FunctionsÂ·MyClickFoo ~ =type.func(*"".Functions, twist.Context, "".MyClickFoo_T) Ü    =E      Ap    /@)p    Rp    0S~ @"".c a       @~ S"".c a       S!      p       A	¡      y      ~ @ "".v ~ =!type."".MyClickFoo_T a        @!~ S""".v a       "S!      y      y      ~ =#"".FunctionsÂ·MyClickFoo      #=£      -    ;   )== $   )D~ =$type.*"".MyClick_T -    ;$== *D-    ;   $==    $D-    ;   $=   A-    ;   $=¡ÇA-    ;   $=   A-    ;   $=   A-    ;   $=   A-    ;   $=   A~ =%go.string."*handler.MyClick_T" -    ;   $== %D~ =&weak.type.**"".MyClick_T -    ;   $== &D-    ;    $== D5    ;$=$   A~ ='type.*runtime.StructType -    ;== 'D-    ;   ==    D-    ;   =   A-    ;   =¶ ÙFA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =(go.string."handler.MyClick_T" -    ;   == (D-    ;   == $D-    ;    == ,   D-    ;$   =   A-    ;(   =   A~ =)go.string."Span1" -    ;,   == )D-    ;0   =A~ =*type.*twist.Item -    ;4   == *D-    ;8   =A-    ;<   =A~ =+go.string."Text1" -    ;@   == +D-    ;D   =A-    ;H   == *D-    ;L   =A-    ;P   =   A~ =,go.string."Img1" -    ;T   == ,D-    ;X   =A-    ;\   == *D-    ;`   =A-    ;d   =   A-    ;   == h   D~ =-go.string."MyClick_T" -    ;h   == -D~ =.go.importpath."". -    ;l   == .D-    ;p   == |   D-    ;t   =A-    ;x   =A5    ;=|   A~ =/type.*runtime.FuncType -    ;== /D-    ;   ==    D-    ;   =   A-    ;   =LúqA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =0go.string."func(*handler.Functions, twist.Context, handler.MyClick_T)" -    ;   == 0D~ =1weak.type.*func(*"".Functions, twist.Context, "".MyClick_T) -    ;   == 1D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A~ =type.*"".Functions -    ;<   == D~ =type.twist.Context -    ;@   == D-    ;D   == D5    ;
=H   A~ =type.*"".MyClickFoo_T ~ =type.*runtime.PtrType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =&¸A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."*handler.MyClickFoo_T" -    ;   == D~ =weak.type.**"".MyClickFoo_T -    ;   == D-    ;    == !D5    ;=$   A-    ;!== 'D-    ;   !==    !D-    ;   !=   A-    ;   !=§SA-    ;   !=   A-    ;   !=   A-    ;   !=   A-    ;   !=   A~ =go.string."handler.MyClickFoo_T" -    ;   !== D-    ;   !== D-    ;    !== ,   !D-    ;$   !=   A-    ;(   !=   A-    ;,   !== )D-    ;0   !=A-    ;4   !== *D-    ;8   !=A-    ;<   !=A-    ;@   !== +D-    ;D   !=A-    ;H   !== *D-    ;L   !=A-    ;P   !=   A-    ;   !== T   !D~ =go.string."MyClickFoo_T" -    ;T   !== D-    ;X   !== .D-    ;\   !== h   !D-    ;`   !=A-    ;d   !=A5    ;!=h   A-    ;== /D-    ;   ==    D-    ;   =   A-    ;   =yâA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =	go.string."func(*handler.Functions, twist.Context, handler.MyClickFoo_T)" -    ;   == 	D~ =
weak.type.*func(*"".Functions, twist.Context, "".MyClickFoo_T) -    ;   == 
D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D-    ;D   == !D5    ;
=H   A~ =type.*"".MyClickNew_T -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ÄA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."*handler.MyClickNew_T" -    ;   == D~ =weak.type.**"".MyClickNew_T -    ;   == D-    ;    == D5    ;=$   A-    ;== 'D-    ;   ==    D-    ;   =   A-    ;   =hpØA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."handler.MyClickNew_T" -    ;   == D-    ;   == D-    ;    == ,   D-    ;$   =   A-    ;(   =   A~ =go.string."Val1" -    ;,   == D-    ;0   =A~ =type.twist.String -    ;4   == D-    ;8   =A-    ;<   =A-    ;@   == )D-    ;D   =A-    ;H   == *D-    ;L   =A-    ;P   =   A-    ;T   == ,D-    ;X   =A-    ;\   == *D-    ;`   =A-    ;d   =   A-    ;h   == +D-    ;l   =A-    ;p   == *D-    ;t   =A-    ;x   =   A-    ;   == |   D~ =go.string."MyClickNew_T" ~ =type."".MyClickNew_T -    ;|   == D-    ;   == .D-    ;   ==    D-    ;   =A-    ;   =A5    ;=   A~ =type.func(*"".Functions, twist.Context, "".MyClickNew_T) -    ;== /D-    ;   ==    D-    ;   =   A-    ;   =¼.OA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*handler.Functions, twist.Context, handler.MyClickNew_T)" -    ;   == D~ =weak.type.*func(*"".Functions, twist.Context, "".MyClickNew_T) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D-    ;D   == D5    ;
=H   A~ =type.*"".Page1_T -    ;== D-    ;   ==    D-    ;   =   A-    ;   =0ÛXTA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."*handler.Page1_T" -    ;   == D~ =weak.type.**"".Page1_T -    ;   == D~ =type."".Page1_T -    ;    == D5    ;=$   A-    ;== 'D-    ;   ==    D-    ;   =   A-    ;   =Æ}ö¿A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."handler.Page1_T" -    ;   == D-    ;   == D-    ;    == ,   D-    ;$   =   A-    ;(   =   A-    ;,   == D-    ;0   =A-    ;4   == D-    ;8   =A-    ;<   =A~ =go.string."Val2" -    ;@   == D-    ;D   =A~ =type.twist.Int -    ;H   == D-    ;L   =A-    ;P   =   A-    ;   == T   D~ =go.string."Page1_T" -    ;T   == D-    ;X   == .D-    ;\   == h   D-    ;`   =A-    ;d   =A5    ;=h   A~ =type.func(*"".Functions, twist.Context, "".Page1_T) -    ;== /D-    ;   ==    D-    ;   =   A-    ;   =è¢A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*handler.Functions, twist.Context, handler.Page1_T)" -    ;   == D~ = weak.type.*func(*"".Functions, twist.Context, "".Page1_T) -    ;   ==  D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D-    ;D   == D5    ;
=H   A~ =!type.func(*"".Functions, twist.Context) -    ;!== /D-    ;   !==    !D-    ;   !=   A-    ;   !=ËÁªA-    ;   !=   A-    ;   !=   A-    ;   !=   A-    ;   !=   A~ ="go.string."func(*handler.Functions, twist.Context)" -    ;   !== "D~ =#weak.type.*func(*"".Functions, twist.Context) -    ;   !== #D-    ;    !=A-    ;$   !== <   !D-    ;(   !=   A-    ;,   !=   A-    ;0   !== D   !D-    ;4   !=A-    ;8   !=A-    ;<   !== D-    ;@   !== D5    ;
!=D   A-    ;$   =A-    ;(   =A-    ;,   == 8   D-    ;0   =   A-    ;4   =   A~ =$go.string."MyClick" -    ;8   == $D-    ;<   =A~ =%type.func(twist.Context, "".MyClick_T) -    ;%== /D-    ;   %==    %D-    ;   %=   A-    ;   %=uhØA-    ;   %=   A-    ;   %=   A-    ;   %=   A-    ;   %=   A~ =&go.string."func(twist.Context, handler.MyClick_T)" -    ;   %== &D~ ='weak.type.*func(twist.Context, "".MyClick_T) -    ;   %== 'D-    ;    %=A-    ;$   %== <   %D-    ;(   %=   A-    ;,   %=   A-    ;0   %== D   %D-    ;4   %=A-    ;8   %=A-    ;<   %== D~ =(type."".MyClick_T -    ;@   %== (D5    ;
%=D   A-    ;@   == %D~ =)type.func(*"".Functions, twist.Context, "".MyClick_T) -    ;D   == )D~ =*"".*FunctionsÂ·MyClick -    ;H   == *D-    ;L   == *D~ =+go.string."MyClickFoo" -    ;P   == +D-    ;T   =A~ =,type.func(twist.Context, "".MyClickFoo_T) -    ;,== /D-    ;   ,==    ,D-    ;   ,=   A-    ;   ,=ZÇÉAA-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A~ =-go.string."func(twist.Context, handler.MyClickFoo_T)" -    ;   ,== -D~ =.weak.type.*func(twist.Context, "".MyClickFoo_T) -    ;   ,== .D-    ;    ,=A-    ;$   ,== <   ,D-    ;(   ,=   A-    ;,   ,=   A-    ;0   ,== D   ,D-    ;4   ,=A-    ;8   ,=A-    ;<   ,== D~ =/type."".MyClickFoo_T -    ;@   ,== /D5    ;
,=D   A-    ;X   == ,D~ =0type.func(*"".Functions, twist.Context, "".MyClickFoo_T) -    ;\   == 0D~ =1"".*FunctionsÂ·MyClickFoo -    ;`   == 1D-    ;d   == 1D~ =go.string."MyClickNew" ~ =type.*"".Functions -    ;h   == D-    ;l   =A~ =type.func(twist.Context, "".MyClickNew_T) ~ =type.*runtime.FuncType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =k­Æ8A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(twist.Context, handler.MyClickNew_T)" -    ;   == D~ =weak.type.*func(twist.Context, "".MyClickNew_T) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =A-    ;8   =A~ =type.twist.Context -    ;<   == D-    ;@   == D5    ;
=D   A-    ;p   == D-    ;t   == D~ ="".*FunctionsÂ·MyClickNew -    ;x   == D-    ;|   == D~ =	go.string."Page1" -    ;   == 	D-    ;   =A~ =
type.func(twist.Context, "".Page1_T) -    ;
== D-    ;   
==    
D-    ;   
=   A-    ;   
=úºA-    ;   
=   A-    ;   
=   A-    ;   
=   A-    ;   
=   A~ =go.string."func(twist.Context, handler.Page1_T)" -    ;   
== D~ =weak.type.*func(twist.Context, "".Page1_T) -    ;   
== D-    ;    
=A-    ;$   
== <   
D-    ;(   
=   A-    ;,   
=   A-    ;0   
== D   
D-    ;4   
=A-    ;8   
=A-    ;<   
== D-    ;@   
== D5    ;

=D   A-    ;   == 
D-    ;   == D~ ="".*FunctionsÂ·Page1 -    ;   == D-    ;   == D~ =go.string."Root" -    ;   == D-    ;   =A~ =type.func(twist.Context) -    ;== D-    ;   ==    D-    ;   =   A-    ;   =`?oA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(twist.Context)" -    ;   == D~ =weak.type.*func(twist.Context) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =A-    ;8   =A-    ;<   == D5    ;
=@   A-    ;    == D-    ;¤   == !D~ ="".*FunctionsÂ·Root -    ;¨   == D-    ;¬   == D5    ;=°   A~ =type."".Functions ~ =type.*runtime.IntType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ÝT/tA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."handler.Functions" -    ;   == D-    ;   == D-    ;   ==     D~ =type.func("".Functions, twist.Context, "".MyClick_T) -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ÊÔ"ÍA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(handler.Functions, twist.Context, handler.MyClick_T)" -    ;   == D~ =weak.type.*func("".Functions, twist.Context, "".MyClick_T) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D-    ;D   == (D5    ;
=H   A~ =type.func("".Functions, twist.Context, "".MyClickFoo_T) -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ã·/^A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(handler.Functions, twist.Context, handler.MyClickFoo_T)" -    ;   == D~ =weak.type.*func("".Functions, twist.Context, "".MyClickFoo_T) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D-    ;D   == /D5    ;
=H   A~ =type.func("".Functions, twist.Context, "".Page1_T) -    ;== D-    ;   ==    D-    ;   =   A-    ;   =U¨A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(handler.Functions, twist.Context, handler.Page1_T)" -    ;   == D~ =weak.type.*func("".Functions, twist.Context, "".Page1_T) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D~ =type."".Page1_T -    ;D   == D5    ;
=H   A~ = type.func("".Functions, twist.Context) -    ; == D-    ;    ==     D-    ;    =   A-    ;    = Ú/A-    ;    =   A-    ;    =   A-    ;    =   A-    ;    =   A~ =!go.string."func(handler.Functions, twist.Context)" -    ;    == !D~ ="weak.type.*func("".Functions, twist.Context) -    ;    == "D-    ;     =A-    ;$    == <    D-    ;(    =   A-    ;,    =   A-    ;0    == D    D-    ;4    =A-    ;8    =A-    ;<    == D-    ;@    == D5    ;
 =D   A~ =#go.string."Functions" -    ;    == #D~ =$go.importpath."". -    ;$   == $D-    ;(   == 4   D-    ;,   =   A-    ;0   =   A~ =%go.string."MyClick" -    ;4   == %D-    ;8   =A~ =&type.func(twist.Context, "".MyClick_T) -    ;<   == &D-    ;@   == D~ ='"".FunctionsÂ·MyClick -    ;D   == 'D-    ;H   == 'D-    ;L   == +D-    ;P   =A-    ;T   == ,D-    ;X   == D~ =("".FunctionsÂ·MyClickFoo -    ;\   == (D-    ;`   == (D-    ;d   == D-    ;h   =A-    ;l   == D~ =)type.func("".Functions, twist.Context, "".MyClickNew_T) -    ;p   == )D~ =*"".FunctionsÂ·MyClickNew -    ;t   == *D-    ;x   == *D-    ;|   == 	D-    ;   =A-    ;   == 
D-    ;   == D~ =+"".FunctionsÂ·Page1 -    ;   == +D-    ;   == +D-    ;   == D-    ;   =A-    ;   == D-    ;    ==  D~ =,"".FunctionsÂ·Root -    ;¤   == ,D-    ;¨   == ,D5    ;=¬   A-    ;)== D-    ;   )==    )D-    ;   )=   A-    ;   )=UZLA-    ;   )=   A-    ;   )=   A-    ;   )=   A-    ;   )=   A~ =-go.string."func(handler.Functions, twist.Context, handler.MyClickNew_T)" -    ;   )== -D~ =.weak.type.*func("".Functions, twist.Context, "".MyClickNew_T) -    ;   )== .D-    ;    )=A-    ;$   )== <   )D-    ;(   )=   A-    ;,   )=   A-    ;0   )== H   )D-    ;4   )=A-    ;8   )=A-    ;<   )== D-    ;@   )== D~ =/type."".MyClickNew_T -    ;D   )== /D5    ;
)=H   A~ =0type.method(f "".Functions)func(twist.Context) -    ;0== D-    ;   0==    0D-    ;   0=   A-    ;   0=`?oA-    ;   0=   A-    ;   0=   A-    ;   0=   A-    ;   0=   A~ =1go.string."method(f handler.Functions)func(twist.Context)" -    ;   0== 1D~ =weak.type.*method(f "".Functions)func(twist.Context) -    ;   0== D-    ;    0=A-    ;$   0== <   0D-    ;(   0=   A-    ;,   0=   A-    ;0   0== D   0D-    ;4   0=A-    ;8   0=A-    ;<   0== D-    ;@   0== D5    ;
0=D   A~ =type.func(*twist.Writer, string) *twist.Test_T -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ì±ùÅA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*twist.Writer, string) *twist.Test_T" -    ;   == D~ =weak.type.*func(*twist.Writer, string) *twist.Test_T -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A~ =type.*twist.Writer -    ;<   == D~ =type.string -    ;@   == D~ =type.*twist.Test_T -    ;D   == D5    ;
=H   A~ =type.[]interface { } ~ =	type.*runtime.SliceType -    ;== 	D-    ;   ==    D-    ;   =   A-    ;   =6ûýlA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =
go.string."[]interface { }" -    ;   == 
D~ =weak.type.*[]interface { } -    ;   == D~ =type.interface { } -    ;    == D5    ;
=$   A~ =type.[1]interface { } ~ =type.*runtime.ArrayType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ÝcÏçA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."[1]interface { }" -    ;   == D~ =weak.type.*[1]interface { } -    ;   == D-    ;    == D-    ;$   == D-    ;(   =   A5    ;
=,   A~ =type.*[1]interface { } ~ =type.*runtime.PtrType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =VDÀ_A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."*[1]interface { }" -    ;   == D~ =weak.type.**[1]interface { } -    ;   == D-    ;    == D5    ;
=$   A~ =type.func(int32) *[1]interface { } ~ =type.*runtime.FuncType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =:A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(int32) *[1]interface { }" -    ;   == D~ =weak.type.*func(int32) *[1]interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =   A-    ;8   =   A~ =type.int32 -    ;<   == D-    ;@   == D5    ;
=D   A~ =type.func(*uint8, *twist.Test_T) interface { } -    ;== D-    ;   ==    D-    ;   =   A-    ;   =(Îd©A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, *twist.Test_T) interface { }" -    ;   == D~ =weak.type.*func(*uint8, *twist.Test_T) interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A~ =type.*uint8 -    ;<   == D-    ;@   == D-    ;D   == D5    ;
=H   A~ =type.func(*uint8, string) interface { } -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ï¤)¤A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, string) interface { }" -    ;   == D~ = weak.type.*func(*uint8, string) interface { } -    ;   ==  D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A-    ;<   == D-    ;@   == D-    ;D   == D5    ;
=H   A~ =!type.func(*twist.Writer, string) *twist.Inner_T -    ;!== D-    ;   !==    !D-    ;   !=   A-    ;   !=ò·A-    ;   !=   A-    ;   !=   A-    ;   !=   A-    ;   !=   A~ ="go.string."func(*twist.Writer, string) *twist.Inner_T" -    ;   !== "D~ =#weak.type.*func(*twist.Writer, string) *twist.Inner_T -    ;   !== #D-    ;    !=A-    ;$   !== <   !D-    ;(   !=   A-    ;,   !=   A-    ;0   !== D   !D-    ;4   !=   A-    ;8   !=   A-    ;<   !== D-    ;@   !== D~ =$type.*twist.Inner_T -    ;D   !== $D5    ;
!=H   A~ =%type.func(*uint8, *twist.Inner_T) interface { } -    ;%== D-    ;   %==    %D-    ;   %=   A-    ;   %=³fãBA-    ;   %=   A-    ;   %=   A-    ;   %=   A-    ;   %=   A~ =&go.string."func(*uint8, *twist.Inner_T) interface { }" -    ;   %== &D~ ='weak.type.*func(*uint8, *twist.Inner_T) interface { } -    ;   %== 'D-    ;    %=A-    ;$   %== <   %D-    ;(   %=   A-    ;,   %=   A-    ;0   %== D   %D-    ;4   %=   A-    ;8   %=   A-    ;<   %== D-    ;@   %== $D-    ;D   %== D5    ;
%=H   A~ =(type.func(*uint8, int) interface { } -    ;(== D-    ;   (==    (D-    ;   (=   A-    ;   (=ßL±íA-    ;   (=   A-    ;   (=   A-    ;   (=   A-    ;   (=   A~ =)go.string."func(*uint8, int) interface { }" -    ;   (== )D~ =*weak.type.*func(*uint8, int) interface { } -    ;   (== *D-    ;    (=A-    ;$   (== <   (D-    ;(   (=   A-    ;,   (=   A-    ;0   (== D   (D-    ;4   (=   A-    ;8   (=   A-    ;<   (== D~ =+type.int -    ;@   (== +D-    ;D   (== D5    ;
(=H   A~ =,type.func(*uint8, func("".Functions, twist.Context, "".MyClickNew_T)) interface { } -    ;,== D-    ;   ,==    ,D-    ;   ,=   A-    ;   ,=òàO¡A-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A~ =-go.string."func(*uint8, func(handler.Functions, twist.Context, handler.MyClickNew_T)) interface { }" -    ;   ,== -D~ =.weak.type.*func(*uint8, func("".Functions, twist.Context, "".MyClickNew_T)) interface { } -    ;   ,== .D-    ;    ,=A-    ;$   ,== <   ,D-    ;(   ,=   A-    ;,   ,=   A-    ;0   ,== D   ,D-    ;4   ,=   A-    ;8   ,=   A-    ;<   ,== D~ =/type.func("".Functions, twist.Context, "".MyClickNew_T) -    ;@   ,== /D-    ;D   ,== D5    ;
,=H   A~ =0type.func(*uint8, "".MyClickNew_T) interface { } -    ;0== D-    ;   0==    0D-    ;   0=   A-    ;   0=|4^A-    ;   0=   A-    ;   0=   A-    ;   0=   A-    ;   0=   A~ =1go.string."func(*uint8, handler.MyClickNew_T) interface { }" -    ;   0== 1D~ =weak.type.*func(*uint8, "".MyClickNew_T) interface { } -    ;   0== D-    ;    0=A-    ;$   0== <   0D-    ;(   0=   A-    ;,   0=   A-    ;0   0== D   0D-    ;4   0=   A-    ;8   0=   A-    ;<   0== D~ =type."".MyClickNew_T -    ;@   0== D-    ;D   0== D5    ;
0=H   A~ =type.func(*uint8, func("".Functions, twist.Context, "".Page1_T)) interface { } -    ;== D-    ;   ==    D-    ;   =   A-    ;   =7½&îA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, func(handler.Functions, twist.Context, handler.Page1_T)) interface { }" -    ;   == D~ =weak.type.*func(*uint8, func("".Functions, twist.Context, "".Page1_T)) interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A-    ;<   == D~ =type.func("".Functions, twist.Context, "".Page1_T) -    ;@   == D-    ;D   == D5    ;
=H   A~ =type.func(*uint8, "".Page1_T) interface { } -    ;== D-    ;   ==    D-    ;   =   A-    ;   =a#/A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, handler.Page1_T) interface { }" -    ;   == D~ =	weak.type.*func(*uint8, "".Page1_T) interface { } -    ;   == 	D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A-    ;<   == D~ =
type."".Page1_T -    ;@   == 
D-    ;D   == D5    ;
=H   A~ =type.method(f "".Functions)func(twist.Context, "".Page1_T) -    ;== D-    ;   ==    D-    ;   =   A-    ;   =úºA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."method(f handler.Functions)func(twist.Context, handler.Page1_T)" -    ;   == D~ =weak.type.*method(f "".Functions)func(twist.Context, "".Page1_T) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A~ =type."".Functions -    ;<   == D~ =type.twist.Context -    ;@   == D-    ;D   == 
D5    ;
=H   A~ =type.func(int, string, string, string, string) string -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ªÎA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(int, string, string, string, string) string" -    ;   == D~ =weak.type.*func(int, string, string, string, string) string -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == P   D-    ;4   =   A-    ;8   =   A-    ;<   == +D~ =type.string -    ;@   == D-    ;D   == D-    ;H   == D-    ;L   == D-    ;P   == D5    ;
=T   A~ =type.method(f "".Functions)func(twist.Context, "".MyClickNew_T) -    ;== D-    ;   ==    D-    ;   =   A-    ;   =k­Æ8A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."method(f handler.Functions)func(twist.Context, handler.MyClickNew_T)" -    ;   == D~ =weak.type.*method(f "".Functions)func(twist.Context, "".MyClickNew_T) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D-    ;D   == D5    ;
=H   A~ =type.func(int, string, string) string ~ =type.*runtime.FuncType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =`ÅØA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(int, string, string) string" -    ;   == D~ =weak.type.*func(int, string, string) string -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =   A-    ;8   =   A-    ;<   == +D-    ;@   == D-    ;D   == D-    ;H   == D5    ;
=L   A~ =type.func(*uint8, twist.String) interface { } -    ;== D-    ;   ==    D-    ;   =   A-    ;   =øIýA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, twist.String) interface { }" -    ;   == D~ =weak.type.*func(*uint8, twist.String) interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A~ =type.*uint8 -    ;<   == D~ =type.twist.String -    ;@   == D~ = type.interface { } -    ;D   ==  D5    ;
=H   A~ =!type.method(f "".Functions)func(twist.Context, "".MyClick_T) -    ;!== D-    ;   !==    !D-    ;   !=   A-    ;   !=uhØA-    ;   !=   A-    ;   !=   A-    ;   !=   A-    ;   !=   A~ ="go.string."method(f handler.Functions)func(twist.Context, handler.MyClick_T)" -    ;   !== "D~ =#weak.type.*method(f "".Functions)func(twist.Context, "".MyClick_T) -    ;   !== #D-    ;    !=A-    ;$   !== <   !D-    ;(   !=   A-    ;,   !=   A-    ;0   !== H   !D-    ;4   !=A-    ;8   !=A-    ;<   !== D-    ;@   !== D~ =$type."".MyClick_T -    ;D   !== $D5    ;
!=H   A~ =%type.method(f "".Functions)func(twist.Context, "".MyClickFoo_T) -    ;%== D-    ;   %==    %D-    ;   %=   A-    ;   %=ZÇÉAA-    ;   %=   A-    ;   %=   A-    ;   %=   A-    ;   %=   A~ =&go.string."method(f handler.Functions)func(twist.Context, handler.MyClickFoo_T)" -    ;   %== &D~ ='weak.type.*method(f "".Functions)func(twist.Context, "".MyClickFoo_T) -    ;   %== 'D-    ;    %=A-    ;$   %== <   %D-    ;(   %=   A-    ;,   %=   A-    ;0   %== H   %D-    ;4   %=A-    ;8   %=A-    ;<   %== D-    ;@   %== D~ =(type."".MyClickFoo_T -    ;D   %== (D5    ;
%=H   A~ =)type.func(*uint8, "".Functions) interface { } -    ;)== D-    ;   )==    )D-    ;   )=   A-    ;   )=¥5OA-    ;   )=   A-    ;   )=   A-    ;   )=   A-    ;   )=   A~ =*go.string."func(*uint8, handler.Functions) interface { }" -    ;   )== *D~ =+weak.type.*func(*uint8, "".Functions) interface { } -    ;   )== +D-    ;    )=A-    ;$   )== <   )D-    ;(   )=   A-    ;,   )=   A-    ;0   )== D   )D-    ;4   )=   A-    ;8   )=   A-    ;<   )== D-    ;@   )== D-    ;D   )==  D5    ;
)=H   A~ =,type.*"".ClickLink_T ~ =-type.*runtime.PtrType -    ;,== -D-    ;   ,==    ,D-    ;   ,=   A-    ;   ,=n·ìA-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A~ =.go.string."*handler.ClickLink_T" -    ;   ,== .D~ =/weak.type.**"".ClickLink_T -    ;   ,== /D~ =0type."".ClickLink_T -    ;    ,== 0D5    ;,=$   A~ =1type.*runtime.StructType -    ;0== 1D-    ;   0==    0D-    ;   0=   A-    ;   0=êwc A-    ;   0=   A-    ;   0=   A-    ;   0=   A-    ;   0=   A~ =go.string."handler.ClickLink_T" -    ;   0== D-    ;   0== ,D-    ;    0== ,   0D-    ;$   0=   A-    ;(   0=   A~ =go.string."Val1" -    ;,   0== D-    ;0   0=A-    ;4   0== D-    ;8   0=A-    ;<   0=A-    ;   0== @   0D~ =go.string."ClickLink_T" -    ;@   0== D~ =go.importpath."". -    ;D   0== D-    ;H   0== T   0D-    ;L   0=A-    ;P   0=A5    ;0=T   A~ =go.importpath.runtime. ~ =go.string."runtime" -    ;==    D-    ;   =   A5    ;
=   A~ =go.importpath.twist. ~ =go.string."twist" -    ;==    D-    ;   =   A5    ;
=   A~ =	go.importpath.http. ~ =
go.string."http" -    ;	==    
D-    ;   	=   A5    ;
	=   A~ =go.string."/" - 
   ;==    D- 
   ;   =   A- 
   ;   = /       - 
   ;	   =A5 
   ;
=   A~ =go.string."main" -    ;==    D-    ;   =   A-    ;   = main    -    ;   =A5    ;
=   A~ =go.string."Hello world!" -    ;==    D-    ;   =   A-    ;   = Hello wo-    ;   = rld!    -    ;   =A5    ;
=   A~ =go.string."foo" -    ;==    D-    ;   =   A-    ;   = foo     -    ;   =A5    ;
=   A~ =go.string."value" -    ;==    D-    ;   =   A-    ;   = value   -    ;   =A5    ;
=   A~ =go.string."dave" - !   ;==    D- !   ;   =   A- !   ;   = dave    - !   ;   =A5 !   ;
=   A~ =go.string."BAR" - $   ;==    D- $   ;   =   A- $   ;   = BAR     - $   ;   =A5 $   ;
=   A~ =go.string."http://pix-eu.dontstayin.com/53812cd7-33c7-44ac-a766-9710e4f14077.jpg" - %   ;==    D- %   ;   =E   A- %   ;   = http://p- %   ;   = ix-eu.do- %   ;   = ntstayin- %   ;    = .com/538- %   ;(   = 12cd7-33- %   ;0   = c7-44ac-- %   ;8   = a766-971- %   ;@   = 0e4f1407- %   ;H   = 7.jpg   - %   ;M   =A5 %   ;
=P   A~ =go.string."src" - %   ;==    D- %   ;   =   A- %   ;   = src     - %   ;   =A5 %   ;
=   A~ =go.string."width" - &   ;==    D- &   ;   =   A- &   ;   = width   - &   ;   =A5 &   ;
=   A~ =go.string."height" - '   ;==    D- '   ;   =   A- '   ;   = height  - '   ;   =A5 '   ;
=   A~ =go.string."testing" - )   ;==    D- )   ;   =   A- )   ;   = testing - )   ;   =A5 )   ;
=   A~ =go.string."ooooooh!" - +   ;==    D- +   ;   =   A- +   ;   = ooooooh!- +   ;   =A5 +   ;
=   A~ =go.string."Hello World." - ;   ;==    D- ;   ;   =   A- ;   ;   = Hello Wo- ;   ;   = rld.    - ;   ;   =A5 ;   ;
=   A~ =go.string." - " - ;   ;==    D- ;   ;   =   A- ;   ;   =  -      - ;   ;   =A5 ;   ;
=   A~ =go.string."10px solid #ff0000" - M   ;==    D- M   ;   =   A- M   ;   = 10px sol- M   ;   = id #ff00- M   ;   = 00      - M   ;   =A5 M   ;
=   A~ =go.string."border" - M   ;==    D- M   ;   =   A- M   ;   = border  - M   ;   =A5 M   ;
=   A~ =go.string."WHOOOOOOPPPPPPPPP!!!!" - N   ;==    D- N   ;   =   A- N   ;   = WHOOOOOO- N   ;   = PPPPPPPP- N   ;   = P!!!!   - N   ;   =A5 N   ;
=    A~ =go.string."WHOOOOOOPPPPPPPPP!!!!! " - \   ;==    D- \   ;   =   A- \   ;   = WHOOOOOO- \   ;   = PPPPPPPP- \   ;   = P!!!!!  - \   ;   =A5 \   ;
=    A~ =go.string."FOOOOOOOOOOO " - h   ;==    D- h   ;   =   A- h   ;   = FOOOOOOO- h   ;   = OOOO    - h   ;   =A5 h   ;
=   A~ =go.string."func()" - k   ;==    D- k   ;   =   A- k   ;   = func()  - k   ;   =A5 k   ;
=   A~ = go.string."func(http.ResponseWriter, *http.Request)" - k   ; ==     D- k   ;    =(   A- k   ;    = func(htt- k   ;    = p.Respon- k   ;    = seWriter- k   ;     = , *http.- k   ;(    = Request)- k   ;0    =A5 k   ;
 =4   A~ =!go.string."func(string, func(http.ResponseWriter, *http.Request))" - k   ;!==    !D- k   ;   !=6   A- k   ;   != func(str- k   ;   != ing, fun- k   ;   != c(http.R- k   ;    != esponseW- k   ;(   != riter, *- k   ;0   != http.Req- k   ;8   != uest))  - k   ;>   !=A5 k   ;
!=@   A~ ="go.string."interface { }" - k   ;"==    "D- k   ;   "=   A- k   ;   "= interfac- k   ;   "= e { }   - k   ;   "=A5 k   ;
"=   A~ =#go.string."func(uintptr) interface { }" - k   ;#==    #D- k   ;   #=   A- k   ;   #= func(uin- k   ;   #= tptr) in- k   ;   #= terface - k   ;    #= { }     - k   ;#   #=A5 k   ;
#=$   A~ =$go.string."func() interface { }" - k   ;$==    $D- k   ;   $=   A- k   ;   $= func() i- k   ;   $= nterface- k   ;   $=  { }    - k   ;   $=A5 k   ;
$=    A~ =%go.string."func(int, func(uintptr) interface { }) func() interface { }" - k   ;%==    %D- k   ;   %=;   A- k   ;   %= func(int- k   ;   %= , func(u- k   ;   %= intptr) - k   ;    %= interfac- k   ;(   %= e { }) f- k   ;0   %= unc() in- k   ;8   %= terface - k   ;@   %= { }     - k   ;C   %=A5 k   ;
%=D   A~ =&go.string."func(http.ResponseWriter, *http.Request, func() interface { })" - k   ;&==    &D- k   ;   &=>   A- k   ;   &= func(htt- k   ;   &= p.Respon- k   ;   &= seWriter- k   ;    &= , *http.- k   ;(   &= Request,- k   ;0   &=  func() - k   ;8   &= interfac- k   ;@   &= e { })  - k   ;F   &=A5 k   ;
&=H   A~ ='go.string."*handler.Functions" - k   ;'==    'D- k   ;   '=   A- k   ;   '= *handler- k   ;   '= .Functio- k   ;   '= ns      - k   ;   '=A5 k   ;
'=   A~ =(go.string."*handler.MyClick_T" -    ;(==    (D-    ;   (=   A-    ;   (= *handler-    ;   (= .MyClick-    ;   (= _T      -    ;   (=A5    ;
(=   A~ =)go.string."handler.MyClick_T" -    ;)==    )D-    ;   )=   A-    ;   )= handler.-    ;   )= MyClick_-    ;   )= T       -    ;   )=A5    ;
)=   A~ =*go.string."Span1" -    ;*==    *D-    ;   *=   A-    ;   *= Span1   -    ;   *=A5    ;
*=   A~ =+go.string."Text1" -    ;+==    +D-    ;   +=   A-    ;   += Text1   -    ;   +=A5    ;
+=   A~ =,go.string."Img1" -    ;,==    ,D-    ;   ,=   A-    ;   ,= Img1    -    ;   ,=A5    ;
,=   A~ =-go.string."MyClick_T" -    ;-==    -D-    ;   -=	   A-    ;   -= MyClick_-    ;   -= T       -    ;   -=A5    ;
-=   A~ =.go.string."func(*handler.Functions, twist.Context, handler.MyClick_T)" -    ;.==    .D-    ;   .=:   A-    ;   .= func(*ha-    ;   .= ndler.Fu-    ;   .= nctions,-    ;    .=  twist.C-    ;(   .= ontext, -    ;0   .= handler.-    ;8   .= MyClick_-    ;@   .= T)      -    ;B   .=A5    ;
.=D   A~ =/go.string."*handler.MyClickFoo_T" -    ;/==    /D-    ;   /=   A-    ;   /= *handler-    ;   /= .MyClick-    ;   /= Foo_T   -    ;   /=A5    ;
/=    A~ =0go.string."handler.MyClickFoo_T" -    ;0==    0D-    ;   0=   A-    ;   0= handler.-    ;   0= MyClickF-    ;   0= oo_T    -    ;   0=A5    ;
0=    A~ =1go.string."MyClickFoo_T" -    ;1==    1D-    ;   1=   A-    ;   1= MyClickF-    ;   1= oo_T    -    ;   1=A5    ;
1=   A~ =go.string."func(*handler.Functions, twist.Context, handler.MyClickFoo_T)" -    ;==    D-    ;   ==   A-    ;   = func(*ha-    ;   = ndler.Fu-    ;   = nctions,-    ;    =  twist.C-    ;(   = ontext, -    ;0   = handler.-    ;8   = MyClickF-    ;@   = oo_T)   -    ;E   =A5    ;
=H   A~ =go.string."*handler.MyClickNew_T" -    ;==    D-    ;   =   A-    ;   = *handler-    ;   = .MyClick-    ;   = New_T   -    ;   =A5    ;
=    A~ =go.string."handler.MyClickNew_T" -    ;==    D-    ;   =   A-    ;   = handler.-    ;   = MyClickN-    ;   = ew_T    -    ;   =A5    ;
=    A~ =go.string."Val1" -    ;==    D-    ;   =   A-    ;   = Val1    -    ;   =A5    ;
=   A~ =go.string."MyClickNew_T" -    ;==    D-    ;   =   A-    ;   = MyClickN-    ;   = ew_T    -    ;   =A5    ;
=   A~ =go.string."func(*handler.Functions, twist.Context, handler.MyClickNew_T)" -    ;==    D-    ;   ==   A-    ;   = func(*ha-    ;   = ndler.Fu-    ;   = nctions,-    ;    =  twist.C-    ;(   = ontext, -    ;0   = handler.-    ;8   = MyClickN-    ;@   = ew_T)   -    ;E   =A5    ;
=H   A~ =go.string."*handler.Page1_T" -    ;==    D-    ;   =   A-    ;   = *handler-    ;   = .Page1_T-    ;   =A5    ;
=   A~ =go.string."handler.Page1_T" -    ;==    D-    ;   =   A-    ;   = handler.-    ;   = Page1_T -    ;   =A5    ;
=   A~ =	go.string."Val2" -    ;	==    	D-    ;   	=   A-    ;   	= Val2    -    ;   	=A5    ;
	=   A~ =
go.string."Page1_T" -    ;
==    
D-    ;   
=   A-    ;   
= Page1_T -    ;   
=A5    ;

=   A~ =go.string."func(*handler.Functions, twist.Context, handler.Page1_T)" -    ;==    D-    ;   =8   A-    ;   = func(*ha-    ;   = ndler.Fu-    ;   = nctions,-    ;    =  twist.C-    ;(   = ontext, -    ;0   = handler.-    ;8   = Page1_T)-    ;@   =A5    ;
=D   A~ =go.string."func(*handler.Functions, twist.Context)" -    ;==    D-    ;   ='   A-    ;   = func(*ha-    ;   = ndler.Fu-    ;   = nctions,-    ;    =  twist.C-    ;(   = ontext) -    ;/   =A5    ;
=0   A~ =go.string."MyClick" -    ;==    D-    ;   =   A-    ;   = MyClick -    ;   =A5    ;
=   A~ =go.string."func(twist.Context, handler.MyClick_T)" -    ;==    D-    ;   =&   A-    ;   = func(twi-    ;   = st.Conte-    ;   = xt, hand-    ;    = ler.MyCl-    ;(   = ick_T)  -    ;.   =A5    ;
=0   A~ =go.string."MyClickFoo" -    ;==    D-    ;   =
   A-    ;   = MyClickF-    ;   = oo      -    ;   =A5    ;
=   A~ =go.string."func(twist.Context, handler.MyClickFoo_T)" -    ;==    D-    ;   =)   A-    ;   = func(twi-    ;   = st.Conte-    ;   = xt, hand-    ;    = ler.MyCl-    ;(   = ickFoo_T-    ;0   = )       -    ;1   =A5    ;
=4   A~ =go.string."MyClickNew" -    ;==    D-    ;   =
   A-    ;   = MyClickN-    ;   = ew      -    ;   =A5    ;
=   A~ =go.string."func(twist.Context, handler.MyClickNew_T)" -    ;==    D-    ;   =)   A-    ;   = func(twi-    ;   = st.Conte-    ;   = xt, hand-    ;    = ler.MyCl-    ;(   = ickNew_T-    ;0   = )       -    ;1   =A5    ;
=4   A~ =go.string."Page1" -    ;==    D-    ;   =   A-    ;   = Page1   -    ;   =A5    ;
=   A~ =go.string."func(twist.Context, handler.Page1_T)" -    ;==    D-    ;   =$   A-    ;   = func(twi-    ;   = st.Conte-    ;   = xt, hand-    ;    = ler.Page-    ;(   = 1_T)    -    ;,   =A5    ;
=0   A~ =go.string."Root" -    ;==    D-    ;   =   A-    ;   = Root    -    ;   =A5    ;
=   A~ =go.string."func(twist.Context)" -    ;==    D-    ;   =   A-    ;   = func(twi-    ;   = st.Conte-    ;   = xt)     -    ;   =A5    ;
=   A~ =go.string."handler.Functions" -    ;==    D-    ;   =   A-    ;   = handler.-    ;   = Function-    ;   = s       -    ;   =A5    ;
=   A~ =go.string."func(handler.Functions, twist.Context, handler.MyClick_T)" -    ;==    D-    ;   =9   A-    ;   = func(han-    ;   = dler.Fun-    ;   = ctions, -    ;    = twist.Co-    ;(   = ntext, h-    ;0   = andler.M-    ;8   = yClick_T-    ;@   = )       -    ;A   =A5    ;
=D   A~ =go.string."func(handler.Functions, twist.Context, handler.MyClickFoo_T)" -    ;==    D-    ;   =<   A-    ;   = func(han-    ;   = dler.Fun-    ;   = ctions, -    ;    = twist.Co-    ;(   = ntext, h-    ;0   = andler.M-    ;8   = yClickFo-    ;@   = o_T)    -    ;D   =A5    ;
=H   A~ =go.string."func(handler.Functions, twist.Context, handler.Page1_T)" -    ;==    D-    ;   =7   A-    ;   = func(han-    ;   = dler.Fun-    ;   = ctions, -    ;    = twist.Co-    ;(   = ntext, h-    ;0   = andler.P-    ;8   = age1_T) -    ;?   =A5    ;
=@   A~ =go.string."func(handler.Functions, twist.Context)" -    ;==    D-    ;   =&   A-    ;   = func(han-    ;   = dler.Fun-    ;   = ctions, -    ;    = twist.Co-    ;(   = ntext)  -    ;.   =A5    ;
=0   A~ =go.string."Functions" -    ;==    D-    ;   =	   A-    ;   = Function-    ;   = s       -    ;   =A5    ;
=   A~ =go.string."func(handler.Functions, twist.Context, handler.MyClickNew_T)" -    ;==    D-    ;   =<   A-    ;   = func(han-    ;   = dler.Fun-    ;   = ctions, -    ;    = twist.Co-    ;(   = ntext, h-    ;0   = andler.M-    ;8   = yClickNe-    ;@   = w_T)    -    ;D   =A5    ;
=H   A~ =go.string."method(f handler.Functions)func(twist.Context)" -    ;==    D-    ;   =.   A-    ;   = method(f-    ;   =  handler-    ;   = .Functio-    ;    = ns)func(-    ;(   = twist.Co-    ;0   = ntext)  -    ;6   =A5    ;
=8   A~ =go.string."func(*twist.Writer, string) *twist.Test_T" -    ;==    D-    ;   =)   A-    ;   = func(*tw-    ;   = ist.Writ-    ;   = er, stri-    ;    = ng) *twi-    ;(   = st.Test_-    ;0   = T       -    ;1   =A5    ;
=4   A~ = go.string."[]interface { }" -    ; ==     D-    ;    =   A-    ;    = []interf-    ;    = ace { } -    ;    =A5    ;
 =   A~ =!go.string."[1]interface { }" -    ;!==    !D-    ;   !=   A-    ;   != [1]inter-    ;   != face { }-    ;   !=A5    ;
!=   A~ ="go.string."*[1]interface { }" -    ;"==    "D-    ;   "=   A-    ;   "= *[1]inte-    ;   "= rface { -    ;   "= }       -    ;   "=A5    ;
"=   A~ =#go.string."func(int32) *[1]interface { }" -    ;#==    #D-    ;   #=   A-    ;   #= func(int-    ;   #= 32) *[1]-    ;   #= interfac-    ;    #= e { }   -    ;%   #=A5    ;
#=(   A~ =$go.string."func(*uint8, *twist.Test_T) interface { }" -    ;$==    $D-    ;   $=)   A-    ;   $= func(*ui-    ;   $= nt8, *tw-    ;   $= ist.Test-    ;    $= _T) inte-    ;(   $= rface { -    ;0   $= }       -    ;1   $=A5    ;
$=4   A~ =%go.string."func(*uint8, string) interface { }" -    ;%==    %D-    ;   %="   A-    ;   %= func(*ui-    ;   %= nt8, str-    ;   %= ing) int-    ;    %= erface {-    ;(   %=  }      -    ;*   %=A5    ;
%=,   A~ =&go.string."func(*twist.Writer, string) *twist.Inner_T" -    ;&==    &D-    ;   &=*   A-    ;   &= func(*tw-    ;   &= ist.Writ-    ;   &= er, stri-    ;    &= ng) *twi-    ;(   &= st.Inner-    ;0   &= _T      -    ;2   &=A5    ;
&=4   A~ ='go.string."func(*uint8, *twist.Inner_T) interface { }" -    ;'==    'D-    ;   '=*   A-    ;   '= func(*ui-    ;   '= nt8, *tw-    ;   '= ist.Inne-    ;    '= r_T) int-    ;(   '= erface {-    ;0   '=  }      -    ;2   '=A5    ;
'=4   A~ =(go.string."func(*uint8, int) interface { }" -    ;(==    (D-    ;   (=   A-    ;   (= func(*ui-    ;   (= nt8, int-    ;   (= ) interf-    ;    (= ace { } -    ;'   (=A5    ;
(=(   A~ =)go.string."func(*uint8, func(handler.Functions, twist.Context, handler.MyClickNew_T)) interface { }" -    ;)==    )D-    ;   )=X   A-    ;   )= func(*ui-    ;   )= nt8, fun-    ;   )= c(handle-    ;    )= r.Functi-    ;(   )= ons, twi-    ;0   )= st.Conte-    ;8   )= xt, hand-    ;@   )= ler.MyCl-    ;H   )= ickNew_T-    ;P   )= )) inter-    ;X   )= face { }-    ;`   )=A5    ;
)=d   A~ =*go.string."func(*uint8, handler.MyClickNew_T) interface { }" -    ;*==    *D-    ;   *=0   A-    ;   *= func(*ui-    ;   *= nt8, han-    ;   *= dler.MyC-    ;    *= lickNew_-    ;(   *= T) inter-    ;0   *= face { }-    ;8   *=A5    ;
*=<   A~ =+go.string."func(*uint8, func(handler.Functions, twist.Context, handler.Page1_T)) interface { }" -    ;+==    +D-    ;   +=S   A-    ;   += func(*ui-    ;   += nt8, fun-    ;   += c(handle-    ;    += r.Functi-    ;(   += ons, twi-    ;0   += st.Conte-    ;8   += xt, hand-    ;@   += ler.Page-    ;H   += 1_T)) in-    ;P   += terface -    ;X   += { }     -    ;[   +=A5    ;
+=\   A~ =,go.string."func(*uint8, handler.Page1_T) interface { }" -    ;,==    ,D-    ;   ,=+   A-    ;   ,= func(*ui-    ;   ,= nt8, han-    ;   ,= dler.Pag-    ;    ,= e1_T) in-    ;(   ,= terface -    ;0   ,= { }     -    ;3   ,=A5    ;
,=4   A~ =-go.string."method(f handler.Functions)func(twist.Context, handler.Page1_T)" -    ;-==    -D-    ;   -=?   A-    ;   -= method(f-    ;   -=  handler-    ;   -= .Functio-    ;    -= ns)func(-    ;(   -= twist.Co-    ;0   -= ntext, h-    ;8   -= andler.P-    ;@   -= age1_T) -    ;G   -=A5    ;
-=H   A~ =.go.string."func(int, string, string, string, string) string" -    ;.==    .D-    ;   .=0   A-    ;   .= func(int-    ;   .= , string-    ;   .= , string-    ;    .= , string-    ;(   .= , string-    ;0   .= ) string-    ;8   .=A5    ;
.=<   A~ =/go.string."method(f handler.Functions)func(twist.Context, handler.MyClickNew_T)" -    ;/==    /D-    ;   /=D   A-    ;   /= method(f-    ;   /=  handler-    ;   /= .Functio-    ;    /= ns)func(-    ;(   /= twist.Co-    ;0   /= ntext, h-    ;8   /= andler.M-    ;@   /= yClickNe-    ;H   /= w_T)    -    ;L   /=A5    ;
/=P   A~ =0go.string."func(int, string, string) string" -    ;0==    0D-    ;   0=    A-    ;   0= func(int-    ;   0= , string-    ;   0= , string-    ;    0= ) string-    ;(   0=A5    ;
0=,   A~ =1go.string."func(*uint8, twist.String) interface { }" -    ;1==    1D-    ;   1=(   A-    ;   1= func(*ui-    ;   1= nt8, twi-    ;   1= st.Strin-    ;    1= g) inter-    ;(   1= face { }-    ;0   1=A5    ;
1=4   A~ =go.string."method(f handler.Functions)func(twist.Context, handler.MyClick_T)" -    ;==    D-    ;   =A   A-    ;   = method(f-    ;   =  handler-    ;   = .Functio-    ;    = ns)func(-    ;(   = twist.Co-    ;0   = ntext, h-    ;8   = andler.M-    ;@   = yClick_T-    ;H   = )       -    ;I   =A5    ;
=L   A~ =go.string."method(f handler.Functions)func(twist.Context, handler.MyClickFoo_T)" -    ;==    D-    ;   =D   A-    ;   = method(f-    ;   =  handler-    ;   = .Functio-    ;    = ns)func(-    ;(   = twist.Co-    ;0   = ntext, h-    ;8   = andler.M-    ;@   = yClickFo-    ;H   = o_T)    -    ;L   =A5    ;
=P   A~ =go.string."func(*uint8, handler.Functions) interface { }" -    ;==    D-    ;   =-   A-    ;   = func(*ui-    ;   = nt8, han-    ;   = dler.Fun-    ;    = ctions) -    ;(   = interfac-    ;0   = e { }   -    ;5   =A5    ;
=8   A~ =go.string."*handler.ClickLink_T" -    ;==    D-    ;   =   A-    ;   = *handler-    ;   = .ClickLi-    ;   = nk_T    -    ;   =A5    ;
=    A~ =go.string."handler.ClickLink_T" -    ;==    D-    ;   =   A-    ;   = handler.-    ;   = ClickLin-    ;   = k_T     -    ;   =A5    ;
=   A~ =go.string."ClickLink_T" -    ;==    D-    ;   =   A-    ;   = ClickLin-    ;   = k_T     -    ;   =A5    ;
=   A~ =go.string."runtime" -    ;==    D-    ;   =   A-    ;   = runtime -    ;   =A5    ;
=   A~ =go.string."twist" -    ;==    D-    ;   =   A-    ;   = twist   -    ;   =A5    ;
=   A~ =	go.string."http" -    ;	==    	D-    ;   	=   A-    ;   	= http    -    ;   	=A5    ;
	=   AM      