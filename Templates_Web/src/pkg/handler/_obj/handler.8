go object darwin 386 
  exports automatically generated from
  src/pkg/handler/handler.go in package "handler"

$$  // exports
    package handler
	import runtime "runtime"
	import templates "templates"
	import appengine "appengine"
	import http "http"
	func "".initÂ·1 ()
	type "http".ResponseWriter interface { Header() "http".Header; Write(? []uint8) (? int, ? "os".Error); WriteHeader(? int) }
	import os "os" // indirect
	type "os".Error interface { String() string }
	import io "io" // indirect
	type "io".Writer interface { Write(p []uint8) (n int, err "os".Error) }
	type "http".Header map[string] []string
	func (h "http".Header) Add (key string, value string)
	func (h "http".Header) Del (key string)
	func (h "http".Header) Get (key string) string
	func (h "http".Header) Set (key string, value string)
	func (h "http".Header) Write (w "io".Writer) "os".Error
	func (h "http".Header) WriteSubset (w "io".Writer, exclude map[string] bool) "os".Error
	import multipart "mime/multipart" // indirect
	type "mime/multipart".File interface { Close() "os".Error; Read(p []uint8) (n int, err "os".Error); ReadAt(p []uint8, off int64) (n int, err "os".Error); Seek(offset int64, whence int) (ret int64, err "os".Error) }
	type "mime/multipart".FileHeader struct { Filename string; Header "net/textproto".MIMEHeader; content []uint8; tmpfile string }
	func (fh *"mime/multipart".FileHeader) Open () (? "mime/multipart".File, ? "os".Error)
	import textproto "net/textproto" // indirect
	type "net/textproto".MIMEHeader map[string] []string
	func (h "net/textproto".MIMEHeader) Add (key string, value string)
	func (h "net/textproto".MIMEHeader) Del (key string)
	func (h "net/textproto".MIMEHeader) Get (key string) string
	func (h "net/textproto".MIMEHeader) Set (key string, value string)
	type "mime/multipart".Reader interface { NextPart() (? *"mime/multipart".Part, ? "os".Error); ReadForm(maxMemory int64) (? *"mime/multipart".Form, ? "os".Error) }
	type "mime/multipart".Part struct { Header "net/textproto".MIMEHeader; buffer *"bytes".Buffer; mr *"mime/multipart".multiReader; disposition string; dispositionParams map[string] string }
	func (bp *"mime/multipart".Part) Close () "os".Error
	func (p *"mime/multipart".Part) FileName () string
	func (p *"mime/multipart".Part) FormName () string
	func (bp *"mime/multipart".Part) Read (p []uint8) (n int, err "os".Error)
	func (p *"mime/multipart".Part) parseContentDisposition ()
	func (bp *"mime/multipart".Part) populateHeaders () "os".Error
	import bytes "bytes" // indirect
	type "io".Reader interface { Read(p []uint8) (n int, err "os".Error) }
	type "bytes".Buffer struct { buf []uint8; off int; runeBytes [4]uint8; bootstrap [64]uint8; lastRead "bytes".readOp }
	func (b *"bytes".Buffer) Bytes () []uint8
	func (b *"bytes".Buffer) Len () int
	func (b *"bytes".Buffer) Next (n int) []uint8
	func (b *"bytes".Buffer) Read (p []uint8) (n int, err "os".Error)
	func (b *"bytes".Buffer) ReadByte () (c uint8, err "os".Error)
	func (b *"bytes".Buffer) ReadBytes (delim uint8) (line []uint8, err "os".Error)
	func (b *"bytes".Buffer) ReadFrom (r "io".Reader) (n int64, err "os".Error)
	func (b *"bytes".Buffer) ReadRune () (r int, size int, err "os".Error)
	func (b *"bytes".Buffer) ReadString (delim uint8) (line string, err "os".Error)
	func (b *"bytes".Buffer) Reset ()
	func (b *"bytes".Buffer) String () string
	func (b *"bytes".Buffer) Truncate (n int)
	func (b *"bytes".Buffer) UnreadByte () "os".Error
	func (b *"bytes".Buffer) UnreadRune () "os".Error
	func (b *"bytes".Buffer) Write (p []uint8) (n int, err "os".Error)
	func (b *"bytes".Buffer) WriteByte (c uint8) "os".Error
	func (b *"bytes".Buffer) WriteRune (r int) (n int, err "os".Error)
	func (b *"bytes".Buffer) WriteString (s string) (n int, err "os".Error)
	func (b *"bytes".Buffer) WriteTo (w "io".Writer) (n int64, err "os".Error)
	func (b *"bytes".Buffer) grow (n int) int
	type "bytes".readOp int
	type "mime/multipart".Form struct { Value map[string] []string; File map[string] []*"mime/multipart".FileHeader }
	func (f *"mime/multipart".Form) RemoveAll () "os".Error
	type "mime/multipart".multiReader struct { bufReader *"bufio".Reader; currentPart *"mime/multipart".Part; partsRead int; nlDashBoundary []uint8; dashBoundaryDash []uint8; dashBoundary []uint8 }
	func (mr *"mime/multipart".multiReader) NextPart () (? *"mime/multipart".Part, ? "os".Error)
	func (r *"mime/multipart".multiReader) ReadForm (maxMemory int64) (f *"mime/multipart".Form, err "os".Error)
	func (mr *"mime/multipart".multiReader) isBoundaryDelimiterLine (line []uint8) bool
	import bufio "bufio" // indirect
	type "bufio".Reader struct { buf []uint8; rd "io".Reader; r int; w int; err "os".Error; lastByte int; lastRuneSize int }
	func (b *"bufio".Reader) Buffered () int
	func (b *"bufio".Reader) Peek (n int) (? []uint8, ? "os".Error)
	func (b *"bufio".Reader) Read (p []uint8) (n int, err "os".Error)
	func (b *"bufio".Reader) ReadByte () (c uint8, err "os".Error)
	func (b *"bufio".Reader) ReadBytes (delim uint8) (line []uint8, err "os".Error)
	func (b *"bufio".Reader) ReadLine () (line []uint8, isPrefix bool, err "os".Error)
	func (b *"bufio".Reader) ReadRune () (rune int, size int, err "os".Error)
	func (b *"bufio".Reader) ReadSlice (delim uint8) (line []uint8, err "os".Error)
	func (b *"bufio".Reader) ReadString (delim uint8) (line string, err "os".Error)
	func (b *"bufio".Reader) UnreadByte () "os".Error
	func (b *"bufio".Reader) UnreadRune () "os".Error
	func (b *"bufio".Reader) fill ()
	type "http".Request struct { Method string; RawURL string; URL *"http".URL; Proto string; ProtoMajor int; ProtoMinor int; Header "http".Header; Cookie []*"http".Cookie; Body "io".ReadCloser; ContentLength int64; TransferEncoding []string; Close bool; Host string; Referer string; UserAgent string; Form "http".Values; MultipartForm *"mime/multipart".Form; Trailer "http".Header; RemoteAddr string; TLS *"crypto/tls".ConnectionState }
	func (r *"http".Request) FormFile (key string) (? "mime/multipart".File, ? *"mime/multipart".FileHeader, ? "os".Error)
	func (r *"http".Request) FormValue (key string) string
	func (r *"http".Request) MultipartReader () (? "mime/multipart".Reader, ? "os".Error)
	func (r *"http".Request) ParseForm () "os".Error
	func (r *"http".Request) ParseMultipartForm (maxMemory int64) "os".Error
	func (r *"http".Request) ProtoAtLeast (major int, minor int) bool
	func (r *"http".Request) SetBasicAuth (username string, password string)
	func (req *"http".Request) Write (w "io".Writer) "os".Error
	func (req *"http".Request) WriteProxy (w "io".Writer) "os".Error
	func (r *"http".Request) expectsContinue () bool
	func (r *"http".Request) multipartReader () (? "mime/multipart".Reader, ? "os".Error)
	func (r *"http".Request) wantsHttp10KeepAlive () bool
	func (req *"http".Request) write (w "io".Writer, usingProxy bool) "os".Error
	type "http".Values map[string] []string
	func (v "http".Values) Add (key string, value string)
	func (v "http".Values) Del (key string)
	func (v "http".Values) Encode () string
	func (v "http".Values) Get (key string) string
	func (v "http".Values) Set (key string, value string)
	type "http".URL struct { Raw string; Scheme string; RawAuthority string; RawUserinfo string; Host string; RawPath string; Path string; OpaquePath bool; RawQuery string; Fragment string }
	func (url *"http".URL) IsAbs () bool
	func (base *"http".URL) ParseURL (ref string) (? *"http".URL, ? "os".Error)
	func (u *"http".URL) Query () "http".Values
	func (base *"http".URL) ResolveReference (ref *"http".URL) *"http".URL
	func (url *"http".URL) String () string
	type "http".Cookie struct { Name string; Value string; Path string; Domain string; Expires "time".Time; RawExpires string; MaxAge int; Secure bool; HttpOnly bool; Raw string; Unparsed []string }
	import time "time" // indirect
	type "time".Time struct { Year int64; Month int; Day int; Hour int; Minute int; Second int; Weekday int; ZoneOffset int; Zone string }
	func (t *"time".Time) Format (layout string) string
	func (t *"time".Time) Seconds () int64
	func (t *"time".Time) String () string
	type "io".ReadCloser interface { Close() "os".Error; Read(p []uint8) (n int, err "os".Error) }
	import tls "crypto/tls" // indirect
	type "crypto/tls".ConnectionState struct { HandshakeComplete bool; CipherSuite uint16; NegotiatedProtocol string; NegotiatedProtocolIsMutual bool; PeerCertificates []*"crypto/x509".Certificate; VerifiedChains [][]*"crypto/x509".Certificate }
	import x509 "crypto/x509" // indirect
	import pkix "crypto/x509/pkix" // indirect
	type "crypto/x509/pkix".CertificateList struct { TBSCertList "crypto/x509/pkix".TBSCertificateList; SignatureAlgorithm "crypto/x509/pkix".AlgorithmIdentifier; SignatureValue "asn1".BitString }
	func (certList *"crypto/x509/pkix".CertificateList) HasExpired (currentTimeSeconds int64) bool
	type "crypto/x509/pkix".TBSCertificateList struct { Raw "asn1".RawContent; Version int :"optional,default:2"; Signature "crypto/x509/pkix".AlgorithmIdentifier; Issuer "crypto/x509/pkix".RDNSequence; ThisUpdate *"time".Time; NextUpdate *"time".Time; RevokedCertificates []"crypto/x509/pkix".RevokedCertificate :"optional"; Extensions []"crypto/x509/pkix".Extension :"tag:0,optional,explicit" }
	import asn1 "asn1" // indirect
	type "asn1".RawContent []uint8
	type "crypto/x509/pkix".AlgorithmIdentifier struct { Algorithm "asn1".ObjectIdentifier; Parameters "asn1".RawValue :"optional" }
	type "asn1".ObjectIdentifier []int
	func (oi "asn1".ObjectIdentifier) Equal (other "asn1".ObjectIdentifier) bool
	type "asn1".RawValue struct { Class int; Tag int; IsCompound bool; Bytes []uint8; FullBytes []uint8 }
	type "crypto/x509/pkix".RDNSequence []"crypto/x509/pkix".RelativeDistinguishedNameSET
	type "crypto/x509/pkix".RelativeDistinguishedNameSET []"crypto/x509/pkix".AttributeTypeAndValue
	type "crypto/x509/pkix".AttributeTypeAndValue struct { Type "asn1".ObjectIdentifier; Value interface { } }
	type "crypto/x509/pkix".RevokedCertificate struct { SerialNumber *"big".Int; RevocationTime *"time".Time; Extensions []"crypto/x509/pkix".Extension :"optional" }
	import big "big" // indirect
	import fmt "fmt" // indirect
	type "fmt".State interface { Flag(c int) bool; Precision() (prec int, ok bool); Width() (wid int, ok bool); Write(b []uint8) (ret int, err "os".Error) }
	import rand "rand" // indirect
	type "rand".Rand struct { src "rand".Source }
	func (r *"rand".Rand) ExpFloat64 () float64
	func (r *"rand".Rand) Float32 () float32
	func (r *"rand".Rand) Float64 () float64
	func (r *"rand".Rand) Int () int
	func (r *"rand".Rand) Int31 () int32
	func (r *"rand".Rand) Int31n (n int32) int32
	func (r *"rand".Rand) Int63 () int64
	func (r *"rand".Rand) Int63n (n int64) int64
	func (r *"rand".Rand) Intn (n int) int
	func (r *"rand".Rand) NormFloat64 () float64
	func (r *"rand".Rand) Perm (n int) []int
	func (r *"rand".Rand) Seed (seed int64)
	func (r *"rand".Rand) Uint32 () uint32
	type "rand".Source interface { Int63() int64; Seed(seed int64) }
	type "fmt".ScanState interface { Read(buf []uint8) (n int, err "os".Error); ReadRune() (rune int, size int, err "os".Error); Token(skipSpace bool, f func(? int) bool) (token []uint8, err "os".Error); UnreadRune() "os".Error; Width() (wid int, ok bool) }
	type "io".RuneScanner interface { ReadRune() (rune int, size int, err "os".Error); UnreadRune() "os".Error }
	type "big".Int struct { neg bool; abs "big".nat }
	func (z *"big".Int) Abs (x *"big".Int) *"big".Int
	func (z *"big".Int) Add (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) And (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) AndNot (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Binomial (n int64, k int64) *"big".Int
	func (z *"big".Int) Bit (i int) uint
	func (z *"big".Int) BitLen () int
	func (z *"big".Int) Bytes () []uint8
	func (x *"big".Int) Cmp (y *"big".Int) int
	func (z *"big".Int) Div (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) DivMod (x *"big".Int, y *"big".Int, m *"big".Int) (? *"big".Int, ? *"big".Int)
	func (z *"big".Int) Exp (x *"big".Int, y *"big".Int, m *"big".Int) *"big".Int
	func (x *"big".Int) Format (s "fmt".State, ch int)
	func (z *"big".Int) GobDecode (buf []uint8) "os".Error
	func (z *"big".Int) GobEncode () (? []uint8, ? "os".Error)
	func (x *"big".Int) Int64 () int64
	func (z *"big".Int) Lsh (x *"big".Int, n uint) *"big".Int
	func (z *"big".Int) Mod (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) ModInverse (g *"big".Int, p *"big".Int) *"big".Int
	func (z *"big".Int) Mul (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) MulRange (a int64, b int64) *"big".Int
	func (z *"big".Int) Neg (x *"big".Int) *"big".Int
	func (z *"big".Int) Not (x *"big".Int) *"big".Int
	func (z *"big".Int) Or (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Quo (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) QuoRem (x *"big".Int, y *"big".Int, r *"big".Int) (? *"big".Int, ? *"big".Int)
	func (z *"big".Int) Rand (rnd *"rand".Rand, n *"big".Int) *"big".Int
	func (z *"big".Int) Rem (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Rsh (x *"big".Int, n uint) *"big".Int
	func (z *"big".Int) Scan (s "fmt".ScanState, ch int) "os".Error
	func (z *"big".Int) Set (x *"big".Int) *"big".Int
	func (z *"big".Int) SetBit (x *"big".Int, i int, b uint) *"big".Int
	func (z *"big".Int) SetBytes (buf []uint8) *"big".Int
	func (z *"big".Int) SetInt64 (x int64) *"big".Int
	func (z *"big".Int) SetString (s string, base int) (? *"big".Int, ? bool)
	func (x *"big".Int) Sign () int
	func (x *"big".Int) String () string
	func (z *"big".Int) Sub (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) Xor (x *"big".Int, y *"big".Int) *"big".Int
	func (z *"big".Int) scan (r "io".RuneScanner, base int) (? *"big".Int, ? int, ? "os".Error)
	type "big".Word uintptr
	type "big".nat []"big".Word
	func (z "big".nat) add (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) and (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) andNot (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) bit (i uint) uint
	func (x "big".nat) bitLen () int
	func (z "big".nat) bytes (buf []uint8) int
	func (z "big".nat) clear ()
	func (x "big".nat) cmp (y "big".nat) int
	func (x "big".nat) decimalString () string
	func (z "big".nat) div (z2 "big".nat, u "big".nat, v "big".nat) (q "big".nat, r "big".nat)
	func (z "big".nat) divLarge (u "big".nat, uIn "big".nat, v "big".nat) (q "big".nat, r "big".nat)
	func (z "big".nat) divW (x "big".nat, y "big".Word) (q "big".nat, r "big".Word)
	func (z "big".nat) expNN (x "big".nat, y "big".nat, m "big".nat) "big".nat
	func (z "big".nat) make (n int) "big".nat
	func (x "big".nat) modW (d "big".Word) "big".Word
	func (z "big".nat) mul (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) mulAddWW (x "big".nat, y "big".Word, r "big".Word) "big".nat
	func (z "big".nat) mulRange (a uint64, b uint64) "big".nat
	func (z "big".nat) norm () "big".nat
	func (z "big".nat) or (x "big".nat, y "big".nat) "big".nat
	func (x "big".nat) powersOfTwoDecompose () (q "big".nat, k int)
	func (n "big".nat) probablyPrime (reps int) bool
	func (z "big".nat) random (rand *"rand".Rand, limit "big".nat, n int) "big".nat
	func (z "big".nat) scan (r "io".RuneScanner, base int) (? "big".nat, ? int, ? "os".Error)
	func (z "big".nat) set (x "big".nat) "big".nat
	func (z "big".nat) setBit (x "big".nat, i uint, b uint) "big".nat
	func (z "big".nat) setBytes (buf []uint8) "big".nat
	func (z "big".nat) setUint64 (x uint64) "big".nat
	func (z "big".nat) setWord (x "big".Word) "big".nat
	func (z "big".nat) shl (x "big".nat, s uint) "big".nat
	func (z "big".nat) shr (x "big".nat, s uint) "big".nat
	func (x "big".nat) string (charset string) string
	func (z "big".nat) sub (x "big".nat, y "big".nat) "big".nat
	func (z "big".nat) xor (x "big".nat, y "big".nat) "big".nat
	type "crypto/x509/pkix".Extension struct { Id "asn1".ObjectIdentifier; Critical bool :"optional"; Value []uint8 }
	type "asn1".BitString struct { Bytes []uint8; BitLength int }
	func (b "asn1".BitString) At (i int) int
	func (b "asn1".BitString) RightAlign () []uint8
	type "crypto/x509".SignatureAlgorithm int
	import rsa "crypto/rsa" // indirect
	type "crypto/rsa".PrivateKey struct { ? "crypto/rsa".PublicKey; D *"big".Int; Primes []*"big".Int; Precomputed "crypto/rsa".PrecomputedValues }
	func (priv *"crypto/rsa".PrivateKey) Precompute ()
	func (priv *"crypto/rsa".PrivateKey) Validate () "os".Error
	type "crypto/rsa".PublicKey struct { N *"big".Int; E int }
	type "crypto/rsa".PrecomputedValues struct { Dp *"big".Int; Dq *"big".Int; Qinv *"big".Int; CRTValues []"crypto/rsa".CRTValue }
	type "crypto/rsa".CRTValue struct { Exp *"big".Int; Coeff *"big".Int; R *"big".Int }
	type "crypto/x509".VerifyOptions struct { DNSName string; Intermediates *"crypto/x509".CertPool; Roots *"crypto/x509".CertPool; CurrentTime int64 }
	type "crypto/x509".CertPool struct { bySubjectKeyId map[string] []int; byName map[string] []int; certs []*"crypto/x509".Certificate }
	func (s *"crypto/x509".CertPool) AddCert (cert *"crypto/x509".Certificate)
	func (s *"crypto/x509".CertPool) AppendCertsFromPEM (pemCerts []uint8) bool
	func (s *"crypto/x509".CertPool) findVerifiedParents (cert *"crypto/x509".Certificate) []int
	type "crypto/x509".Certificate struct { Raw []uint8; RawTBSCertificate []uint8; RawSubjectPublicKeyInfo []uint8; Signature []uint8; SignatureAlgorithm "crypto/x509".SignatureAlgorithm; PublicKeyAlgorithm "crypto/x509".PublicKeyAlgorithm; PublicKey interface { }; Version int; SerialNumber *"big".Int; Issuer "crypto/x509/pkix".Name; Subject "crypto/x509/pkix".Name; NotBefore *"time".Time; NotAfter *"time".Time; KeyUsage "crypto/x509".KeyUsage; ExtKeyUsage []"crypto/x509".ExtKeyUsage; UnknownExtKeyUsage []"asn1".ObjectIdentifier; BasicConstraintsValid bool; IsCA bool; MaxPathLen int; SubjectKeyId []uint8; AuthorityKeyId []uint8; DNSNames []string; EmailAddresses []string; PermittedDNSDomainsCritical bool; PermittedDNSDomains []string; PolicyIdentifiers []"asn1".ObjectIdentifier }
	func (c *"crypto/x509".Certificate) CheckCRLSignature (crl *"crypto/x509/pkix".CertificateList) "os".Error
	func (c *"crypto/x509".Certificate) CheckSignature (algo "crypto/x509".SignatureAlgorithm, signed []uint8, signature []uint8) "os".Error
	func (c *"crypto/x509".Certificate) CheckSignatureFrom (parent *"crypto/x509".Certificate) "os".Error
	func (c *"crypto/x509".Certificate) CreateCRL (rand "io".Reader, priv *"crypto/rsa".PrivateKey, revokedCerts []"crypto/x509/pkix".RevokedCertificate, now *"time".Time, expiry *"time".Time) (crlBytes []uint8, err "os".Error)
	func (c *"crypto/x509".Certificate) Equal (other *"crypto/x509".Certificate) bool
	func (c *"crypto/x509".Certificate) Verify (opts "crypto/x509".VerifyOptions) (chains [][]*"crypto/x509".Certificate, err "os".Error)
	func (c *"crypto/x509".Certificate) VerifyHostname (h string) "os".Error
	func (c *"crypto/x509".Certificate) buildChains (cache map[int] [][]*"crypto/x509".Certificate, currentChain []*"crypto/x509".Certificate, opts *"crypto/x509".VerifyOptions) (chains [][]*"crypto/x509".Certificate, err "os".Error)
	func (c *"crypto/x509".Certificate) isValid (certType int, opts *"crypto/x509".VerifyOptions) "os".Error
	type "crypto/x509".PublicKeyAlgorithm int
	type "crypto/x509/pkix".Name struct { Country []string; Organization []string; OrganizationalUnit []string; Locality []string; Province []string; StreetAddress []string; PostalCode []string; SerialNumber string; CommonName string }
	func (n *"crypto/x509/pkix".Name) FillFromRDNSequence (rdns *"crypto/x509/pkix".RDNSequence)
	func (n "crypto/x509/pkix".Name) ToRDNSequence () "crypto/x509/pkix".RDNSequence
	type "crypto/x509".KeyUsage int
	type "crypto/x509".ExtKeyUsage int
	func "".handler (wr "http".ResponseWriter, r *"http".Request)
	type "templates".Writer struct { Output "http".ResponseWriter; Buffer string; Templates []string; IsRoot bool }
	func (w *"templates".Writer) RegisterTemplate (name string)
	func (w *"templates".Writer) Send ()
	func (w *"templates".Writer) sendFragment ()
	func (w *"templates".Writer) sendPage ()
	type "appengine".Context interface { AppID() string; Call(service string, method string, in interface { }, out interface { }) "os".Error; Criticalf(format string, args ...interface { }); Debugf(format string, args ...interface { }); Errorf(format string, args ...interface { }); FullyQualifiedAppID() string; Infof(format string, args ...interface { }); Request() interface { }; Warningf(format string, args ...interface { }) }
	type "templates".Template struct { name string; Html string; Id string; parentId string; Writer *"templates".Writer }
	func (t *"templates".Template) FullId () string
	func (t *"templates".Template) GetParentId () string
	func (t *"templates".Template) GetTemplateJavascript () string
	type "templates".Item struct { id string; template *"templates".Template; writer *"templates".Writer; Value string }
	func (i *"templates".Item) Append (o ...interface { })
	func (i *"templates".Item) Attr (attrib string, o interface { })
	func (i *"templates".Item) Click (handlerFunc interface { }, items ...interface { })
	func (i *"templates".Item) FullId () string
	func (i *"templates".Item) Html (o ...interface { })
	func (i *"templates".Item) attr (attrib string, val string)
	func (i *"templates".Item) generic (replace bool, o []interface { })
	func (i *"templates".Item) htmlGeneric (replace bool, s string)
	func (i *"templates".Item) templateGeneric (replace bool, t *"templates".Template)
	type "".Context struct { ? *"templates".Writer; Context *"appengine".Context; Request *"http".Request }
	func (c "".Context) MyClick (span1 *"templates".Item, text1 *"templates".Item)
	func (c "".Context) MyClickFoo (span1 *"templates".Item, text1 *"templates".Item)
	func (c "".Context) Root (root *"templates".Item)
	var "".initdoneÂ· uint8
	func "".init ()

$$  // local types

$$

!
~ E</ ~ E<Users ~ E<d.brophy ~ E<Projects ~ E<Templates ~ E<Templates_Web ~ E<src ~ E<pkg ~ E<handler ~ E<handler.go 7      ~ E<http.a 7     ÿÿÿÿA~ E<templates.a 7     ÿÿÿÿA~ E<appengine.a 7     ÿÿÿÿA7 E     ~ ="".initÂ·1 ~ =type.func() Ü    =   A~ =go.string."/" a 	   =~ Shttp.pattern a 	   S! 	     y 	     y 	     ~ ="".handler ~ =type.func(http.ResponseWriter, *http.Request) p 	   = D~ Shttp.handler p 	      S~ =http.HandleFunc ~ =	type.func(string, func(http.ResponseWriter, *http.Request))  	    =	£ 
     Ü    =E      Ap    AS~ =
""._func_001 ~ =type.func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { } p    = 
Dp       S~ =runtime.closure ~ =type.func(int, func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { }) func(*appengine.Context, *templates.Writer, *http.Request) interface { }      =p       S~ Stemplates.getContext p       S~ @"".wr ~ =type.http.ResponseWriter a    @~ Stemplates.wr a    S!      y      y      ~ @"".r ~ =type.*http.Request p       @~ Stemplates.r p       S~ =templates.Handler ~ =type.func(http.ResponseWriter, *http.Request, func(*appengine.Context, *templates.Writer, *http.Request) interface { })      =£      ~ ="".ContextÂ·Root ~ =type.method(c "".Context)func(*templates.Item) Ü     =E\      A~ @"".c ~ =type."".Context a "   @p "   R~ Stemplates.w p "   S~ =go.string."main" a "   =~ Stemplates.id a "      S! "     y "     y "     ~ =templates.Test ~ =type.func(*templates.Writer, string) *templates.Test_T  "    =p "      S~ ? "".test ~ =!type.*templates.Test_T p "   Ìÿÿÿ ?!p #      AS~ ="runtime.new ~ =#type.func(int32) *[1]interface { }  #    "=#p #      S~ ?$"".autotmp_0004 p #      Aàÿÿÿ$?p #      Aäÿÿÿ$?p #   Üÿÿÿ$?~ =%type.uint8 ~ S&runtime.typ p #   = !D%&Sp #   Ìÿÿÿ ?!~ S'runtime.elem p #      'S~ =(runtime.convT2E ~ =)type.func(*uint8, *templates.Test_T) interface { }  #    (=)a #      Sp #   a #   Üÿÿÿ$?p #   R! #     y #     y #     ~ @*"".root ~ =+type.*templates.Item p #      *@+~ S,templates.i p #   ,Sa #   Üÿÿÿ$?~ S-templates.o a #      -S! #     y #     y #     y #     ~ =.templates.*ItemÂ·Html  #    .=p %      AS %    "=#p %      S~ ?/"".autotmp_0006 p %      AÄÿÿÿ/?p %      AÈÿÿÿ/?p %   Àÿÿÿ/?~ =0type.string p %   = 0D%&S~ =1go.string."Hello world!" a %   1=a %      'S! %     y %     y %     ~ =type.func(*uint8, string) interface { }  %    (=a %      Sp %   a %   Àÿÿÿ/?p %   R! %     y %     y %     p %   Ìÿÿÿ ?!	 %      Ap %   Op %   ,Sa %   Àÿÿÿ/?a %      -S! %     y %     y %     y %      %    .=p &   = 0D%&S~ =go.string."foo" a &   =a &      'S! &     y &     y &      &    (=a &      Sp &   a &      -S! &     y &     y &     p &   Ìÿÿÿ ?!	 &      Ap &   Op &   ,S~ =go.string."value" a &   =~ Stemplates.attrib a &      S! &     y &     y &     ~ =templates.*ItemÂ·Attr  &    =a (   @p (   Rp (   S~ =go.string."dave" a (   =a (      S! (     y (     y (     ~ =templates.Inner ~ =type.func(*templates.Writer, string) *templates.Inner_T  (    =p (      S~ ?	"".inner ~ =
type.*templates.Inner_T p (   ¼ÿÿÿ	?
p )      AS )    "=#p )      S~ ?"".autotmp_0008 p )      AÔÿÿÿ?p )      AØÿÿÿ?p )   Ðÿÿÿ?p )   = 
D%&Sp )   ¼ÿÿÿ	?
p )      'S~ =type.func(*uint8, *templates.Inner_T) interface { }  )    (=a )      Sp )   a )   Ðÿÿÿ?p )   R! )     y )     y )     p )   Ìÿÿÿ ?!	 )      Ap )   Op )   ,Sa )   Ðÿÿÿ?a )      -S! )     y )     y )     y )      )    .=p +      AS +    "=#p +      S~ ?"".autotmp_0010 p +      Aìÿÿÿ?p +      Aðÿÿÿ?p +   èÿÿÿ?p +   = 0D%&S~ =go.string."BAR" a +   =a +      'S! +     y +     y +      +    (=a +      Sp +   a +   èÿÿÿ?p +   R! +     y +     y +     p +   ¼ÿÿÿ	?
	 +      Ap +   Op +   ,Sa +   èÿÿÿ?a +      -S! +     y +     y +     y +      +    .=p ,   = 0D%&S~ =go.string."http://pix-eu.dontstayin.com/53812cd7-33c7-44ac-a766-9710e4f14077.jpg" a ,   =a ,      'S! ,     y ,     y ,      ,    (=a ,      Sp ,   a ,      -S! ,     y ,     y ,     p ,   ¼ÿÿÿ	?
	 ,      Ap ,   Op ,   ,S~ =go.string."src" a ,   =a ,      S! ,     y ,     y ,      ,    =~ =type.int p -   = D%&Sp -   d   A   'S~ =type.func(*uint8, int) interface { }  -    (=a -      Sp -   p -   a -      -SÐ -     	 -      A	 -      Ap -      A	¡ -     y -     ! -     p -   ¼ÿÿÿ	?
	 -      Ap -   Op -   ,S~ =go.string."width" a -   =a -      S! -     y -     y -      -    =p .   = D%&Sp .   d   A   'S .    (=a .      Sp .   p .   a .      -SÐ .     	 .      A	 .      Ap .      A	¡ .     y .     ! .     p .   ¼ÿÿÿ	?
	 .      Ap .   Op .   ,S~ =go.string."height" a .   =a .      S! .     y .     y .      .    =p 0      AS~ =type.func(int32) *[2]interface { }  0    "=p 0      S~ ?"".autotmp_0012 p 0      Aøÿÿÿ?p 0      Aüÿÿÿ?p 0   ôÿÿÿ?p 0   = +D%&Sp 0   ¼ÿÿÿ	?
	 0      Ap 0   Op 0      'S~ =type.func(*uint8, *templates.Item) interface { }  0    (=a 0      Sp 0   a 0   ôÿÿÿ?p 0   R! 0     y 0     y 0     p 0   = +D%&Sp 0   Ìÿÿÿ ?!	 0      Ap 0   Op 0      'S 0    (=a 0      Sp 0   a 0   ôÿÿÿ?p 0   R	 0      A! 0     y 0     y 0     ~ =type.func("".Context, *templates.Item, *templates.Item) p 0   = D%&S~ ="".ContextÂ·MyClickFoo p 0   = Dp 0      'S~ =type.func(*uint8, func("".Context, *templates.Item, *templates.Item)) interface { }  0    (=a 0      Sp 0   ~ Stemplates.handlerFunc a 0      S! 0     y 0     y 0     p 0   ¼ÿÿÿ	?
	 0      Ap 0   Op 0   ,Sa 0   ôÿÿÿ?~ Stemplates.items a 0      S! 0     y 0     y 0     y 0     ~ =templates.*ItemÂ·Click  0    =~ @"".c ~ =type."".Context a 2   @p 2   R~ S templates.w p 2    S~ =!templates.*WriterÂ·Send  2    !=£ 3     ~ =""".ContextÂ·MyClick ~ =#type.method(c "".Context)func(*templates.Item, *templates.Item) Ü 5   "=#E(      Ap 7      AS~ =$runtime.new ~ =%type.func(int32) *[1]interface { }  7    $=%p 7      S~ ?&"".autotmp_0085 p 7      Aøÿÿÿ&?p 7      Aüÿÿÿ&?p 7   ôÿÿÿ&?p 7      AS~ ='go.string."WHOOOOOOPPPPPPPPP!!!!! " a 7   '=a 7      S! 7     y 7     y 7     ~ @("".text1 p 7      (@+	 7      Aa 7      S! 7     y 7     y 7     ~ =)runtime.concatstring ~ =*type.func(int, string, string) string  7    )=*a 7      Sp 7   ~ S+runtime.elem a 7      +S! 7     y 7     y 7     ~ =,type.uint8 ~ S-runtime.typ p 7   = 0D,-S~ =.runtime.convT2E  7    .=a 7      Sp 7   a 7   ôÿÿÿ&?p 7   R! 7     y 7     y 7     ~ @/"".span1 ~ =0type.*templates.Item p 7      /@0~ S1templates.i p 7   1Sa 7   ôÿÿÿ&?~ Stemplates.o a 7      S! 7     y 7     y 7     y 7     ~ =templates.*ItemÂ·Html  7    =a 8   @p 8   Rp 8    S 8    !=£ 9     Ü ;   =#E(      Ap =      AS =    $=%p =      S~ ?"".autotmp_0099 p =      Aøÿÿÿ?p =      Aüÿÿÿ?p =   ôÿÿÿ?p =      AS~ =go.string."FOOOOOOOOOOO " a =   =a =      S! =     y =     y =     p =      (@0	 =      Aa =      S! =     y =     y =      =    )=*a =      Sp =   a =      +S! =     y =     y =     ~ =type.string p =   = D,-S~ =type.func(*uint8, string) interface { }  =    .=a =      Sp =   a =   ôÿÿÿ?p =   R! =     y =     y =     p =      /@0p =   1Sa =   ôÿÿÿ?a =      S! =     y =     y =     y =      =    =a >   @p >   Rp >    S >    !=£ @     ~ ="".init ~ =type.func() Ü @   =A~ =	"".initdoneÂ· s @   	=,	W @    ¤  <W @    ¯  <% @   	AO @    £  <W @    ¨  <W @    ­  <p @   	% @   	   AX @    §  <£ @     W @    ­  <~ =
runtime.throwinit  @    
=W @    ¯  <o @      A	=,~ =appengine.init  @    =~ =templates.init  @    =~ =http.init  @    =~ ="".initÂ·1  @    =o @      A	=,£ @     £ @     ~ =""._func_001 ~ =type.func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { } Ü    =E      Ap       AS~ =type.func(int32) *"".Context      $=p       Sp    		       A	~ =type.*appengine.Context p       @p    P~ @"".w ~ =type.*templates.Writer p       @p    Op    		       A	~ @"".r ~ =type.*http.Request p       @p    P~ =type.*"".Context p    = D,-Sp       +S~ =type.func(*uint8, *"".Context) interface { }      .=a       Sp    p    ~ @""..noname a       @!      y      y      £      ~ =runtime.throwreturn      =£      5 @   	=,   A~ =type.*runtime.FuncType - @   ;== D- @   ;   ==    D- @   ;   =   A- @   ;   =ö¼öA- @   ;   =   A- @   ;   =   A- @   ;   =   A- @   ;   =   A~ =go.string."func()" - @   ;   == D~ =weak.type.*func() - @   ;   == D- @   ;    =A- @   ;$   == <   D- @   ;(   =A- @   ;,   =A- @   ;0   == <   D- @   ;4   =A- @   ;8   =A5 @   ;
=<   A~ =type.func(http.ResponseWriter, *http.Request) - @   ;== D- @   ;   ==    D- @   ;   =   A- @   ;   =ôA- @   ;   =   A- @   ;   =   A- @   ;   =   A- @   ;   =   A~ =go.string."func(http.ResponseWriter, *http.Request)" - @   ;   == D~ = weak.type.*func(http.ResponseWriter, *http.Request) - @   ;   ==  D- @   ;    =A- @   ;$   == <   D- @   ;(   =   A- @   ;,   =   A- @   ;0   == D   D- @   ;4   =A- @   ;8   =A~ =!type.http.ResponseWriter - @   ;<   == !D- @   ;@   == D5 @   ;
=D   A~ ="type.func(string, func(http.ResponseWriter, *http.Request)) - @   ;"== D- @   ;   "==    "D- @   ;   "=   A- @   ;   "=úãA- @   ;   "=   A- @   ;   "=   A- @   ;   "=   A- @   ;   "=   A~ =#go.string."func(string, func(http.ResponseWriter, *http.Request))" - @   ;   "== #D~ =$weak.type.*func(string, func(http.ResponseWriter, *http.Request)) - @   ;   "== $D- @   ;    "=A- @   ;$   "== <   "D- @   ;(   "=   A- @   ;,   "=   A- @   ;0   "== D   "D- @   ;4   "=A- @   ;8   "=A- @   ;<   "== D- @   ;@   "== D5 @   ;
"=D   A~ =%type.interface { } ~ =&type.*runtime.InterfaceType - @   ;%== &D- @   ;   %==    %D- @   ;   %=   A- @   ;   %=ô¤BóA- @   ;   %=   A- @   ;   %=   A- @   ;   %=   A- @   ;   %=   A~ ='go.string."interface { }" - @   ;   %== 'D~ =(weak.type.*interface { } - @   ;   %== (D- @   ;    %== ,   %D- @   ;$   %=A- @   ;(   %=A5 @   ;
%=,   A- @   ;== D- @   ;   ==    D- @   ;   =   A- @   ;   =$¬=A- @   ;   =   A- @   ;   =   A- @   ;   =   A- @   ;   =   A~ =)go.string."func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { }" - @   ;   == )D~ =*weak.type.*func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { } - @   ;   == *D- @   ;    =A- @   ;$   == <   D- @   ;(   =   A- @   ;,   =   A- @   ;0   == L   D- @   ;4   =   A- @   ;8   =   A~ =+type.uintptr - @   ;<   == +D- @   ;@   == D- @   ;D   == D- @   ;H   == D- @   ;L   == %D5 @   ;
=P   A~ =,type.func(*appengine.Context, *templates.Writer, *http.Request) interface { } - @   ;,== D- @   ;   ,==    ,D- @   ;   ,=   A- @   ;   ,=i/.;A- @   ;   ,=   A- @   ;   ,=   A- @   ;   ,=   A- @   ;   ,=   A~ =-go.string."func(*appengine.Context, *templates.Writer, *http.Request) interface { }" - @   ;   ,== -D~ =.weak.type.*func(*appengine.Context, *templates.Writer, *http.Request) interface { } - @   ;   ,== .D- @   ;    ,=A- @   ;$   ,== <   ,D- @   ;(   ,=   A- @   ;,   ,=   A- @   ;0   ,== H   ,D- @   ;4   ,=   A- @   ;8   ,=   A- @   ;<   ,== D- @   ;@   ,== D- @   ;D   ,== D- @   ;H   ,== %D5 @   ;
,=L   A~ =/type.func(int, func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { }) func(*appengine.Context, *templates.Writer, *http.Request) interface { } - @   ;/== D- @   ;   /==    /D- @   ;   /=   A- @   ;   /=,#¤yA- @   ;   /=   A- @   ;   /=   A- @   ;   /=   A- @   ;   /=   A~ =0""..gostring.1 - @   ;   /== 0D~ =1weak.type.*func(int, func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { }) func(*appengine.Context, *templates.Writer, *http.Request) interface { } - @   ;   /== 1D- @   ;    /=A- @   ;$   /== <   /D- @   ;(   /=   A- @   ;,   /=   A- @   ;0   /== D   /D- @   ;4   /=   A- @   ;8   /=   A~ =type.int - @   ;<   /== D- @   ;@   /== D- @   ;D   /== ,D5 @   ;
/=H   A~ =type.func(http.ResponseWriter, *http.Request, func(*appengine.Context, *templates.Writer, *http.Request) interface { }) - @   ;== D- @   ;   ==    D- @   ;   =   A- @   ;   =fU/A- @   ;   =   A- @   ;   =   A- @   ;   =   A- @   ;   =   A~ =""..gostring.2 - @   ;   == D~ =weak.type.*func(http.ResponseWriter, *http.Request, func(*appengine.Context, *templates.Writer, *http.Request) interface { }) - @   ;   == D- @   ;    =A- @   ;$   == <   D- @   ;(   =   A- @   ;,   =   A- @   ;0   == H   D- @   ;4   =A- @   ;8   =A- @   ;<   == !D- @   ;@   == D- @   ;D   == ,D5 @   ;
=H   A~ =type.*runtime.PtrType - @   ;== D- @   ;   ==    D- @   ;   =   A- @   ;   =÷ ûA- @   ;   =   A- @   ;   =   A- @   ;   =   A- @   ;   =   A~ =go.string."*handler.Context" - @   ;   == D~ =weak.type.**"".Context - @   ;   == D~ =type."".Context - @   ;    == D       ~ =	"".*ContextÂ·RegisterTemplate Ü @   ;	=Ap @      Sp @   Op @      S~ =
templates.*WriterÂ·RegisterTemplate W @    
=£       ~ ="".*ContextÂ·Send Ü @   ;=Ap @      Sp @   Op @      S~ =templates.*WriterÂ·Send W @    =£       ~ ="".*ContextÂ·Root ~ =type.func(*"".Context, *templates.Item) Ü    =E      A~ @""..this p    @~ S"".c a    S!      y      y      y      ~ @"".root ~ =type.*templates.Item p       @~ S"".root p       S~ ="".ContextÂ·Root      =£      ~ ="".*ContextÂ·MyClick ~ =type.func(*"".Context, *templates.Item, *templates.Item) Ü    =E      Ap    @a    S!      y      y      y      ~ @"".span1 p       @~ S"".span1 p       S~ @"".text1 p       @~ S"".text1 p       S~ ="".ContextÂ·MyClick      =£      ~ ="".*ContextÂ·MyClickFoo Ü    =E      A~ =type.*"".Context p    @a    S!      y      y      y      ~ @"".span1 p       @~ S"".span1 p       S~ @ "".text1 p        @~ S!"".text1 p       !S~ =""".ContextÂ·MyClickFoo      "=£      -    ;   == $   D~ =#type.*runtime.FuncType -    ;== #D-    ;   ==    D-    ;   =   A-    ;   =¿q"A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =$go.string."func(*handler.Context, *templates.Item, *templates.Item)" -    ;   == $D~ =%weak.type.*func(*"".Context, *templates.Item, *templates.Item) -    ;   == %D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D-    ;D   == D5    ;
=H   A~ =&type.func(*"".Context, string) -    ;&== #D-    ;   &==    &D-    ;   &=   A-    ;   &= DÉA-    ;   &=   A-    ;   &=   A-    ;   &=   A-    ;   &=   A~ ='go.string."func(*handler.Context, string)" -    ;   &== 'D~ =(weak.type.*func(*"".Context, string) -    ;   &== (D-    ;    &=A-    ;$   &== <   &D-    ;(   &=   A-    ;,   &=   A-    ;0   &== D   &D-    ;4   &=A-    ;8   &=A-    ;<   &== D~ =)type.string -    ;@   &== )D5    ;
&=D   A-    ;== #D-    ;   ==    D-    ;   =   A-    ;   =ñjqÂA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =*go.string."func(*handler.Context, *templates.Item)" -    ;   == *D~ =+weak.type.*func(*"".Context, *templates.Item) -    ;   == +D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == D5    ;
=D   A~ =,type.func(*"".Context) -    ;,== #D-    ;   ,==    ,D-    ;   ,=   A-    ;   ,=2ÓA-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A~ =-go.string."func(*handler.Context)" -    ;   ,== -D~ =.weak.type.*func(*"".Context) -    ;   ,== .D-    ;    ,=A-    ;$   ,== <   ,D-    ;(   ,=   A-    ;,   ,=   A-    ;0   ,== @   ,D-    ;4   ,=A-    ;8   ,=A-    ;<   ,== D5    ;
,=@   A-    ;$   =A-    ;(   =A-    ;,   == 8   D-    ;0   =   A-    ;4   =   A~ =/go.string."MyClick" -    ;8   == /D-    ;<   =A~ =0type.func(*templates.Item, *templates.Item) -    ;0== #D-    ;   0==    0D-    ;   0=   A-    ;   0=";òA-    ;   0=   A-    ;   0=   A-    ;   0=   A-    ;   0=   A~ =1go.string."func(*templates.Item, *templates.Item)" -    ;   0== 1D~ =weak.type.*func(*templates.Item, *templates.Item) -    ;   0== D-    ;    0=A-    ;$   0== <   0D-    ;(   0=   A-    ;,   0=   A-    ;0   0== D   0D-    ;4   0=A-    ;8   0=A-    ;<   0== D-    ;@   0== D5    ;
0=D   A-    ;@   == 0D-    ;D   == D-    ;H   == D-    ;L   == D~ =go.string."MyClickFoo" -    ;P   == D-    ;T   =A-    ;X   == 0D-    ;\   == D-    ;`   == D-    ;d   == D~ =go.string."RegisterTemplate" -    ;h   == D-    ;l   =A~ =type.func(string) -    ;== #D-    ;   ==    D-    ;   =   A-    ;   =Ç¹¾A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(string)" -    ;   == D~ =weak.type.*func(string) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =A-    ;8   =A-    ;<   == )D5    ;
=@   A-    ;p   == D-    ;t   == &D-    ;x   == 	D-    ;|   == 	D~ =go.string."Root" -    ;   == D-    ;   =A~ =type.func(*templates.Item) -    ;== #D-    ;   ==    D-    ;   =   A-    ;   =4BoA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =	go.string."func(*templates.Item)" -    ;   == 	D~ =
weak.type.*func(*templates.Item) -    ;   == 
D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =A-    ;8   =A-    ;<   == D5    ;
=@   A-    ;   == D-    ;   == D-    ;   == D-    ;   == D~ =go.string."Send" -    ;   == D-    ;   =A~ =type.func() -    ;    == D-    ;¤   == ,D~ ="".*ContextÂ·Send -    ;¨   == D-    ;¬   == D5    ;=°   A~ =type."".Context ~ =type.*runtime.StructType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =!W-A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."handler.Context" -    ;   == D-    ;   == D-    ;    == ,   D-    ;$   =   A-    ;(   =   A-    ;,   =A-    ;0   =A~ =type.*templates.Writer -    ;4   == D-    ;8   =A-    ;<   =A~ =go.string."Context" -    ;@   == D-    ;D   =A~ =type.*appengine.Context -    ;H   == D-    ;L   =A-    ;P   =   A~ =go.string."Request" -    ;T   == D-    ;X   =A~ =type.*http.Request -    ;\   == D-    ;`   =A-    ;d   =   A       ~ ="".ContextÂ·RegisterTemplate ~ =type.func("".Context, string) Ü    =E      A~ @""..this a    @p    R~ Stemplates.w p    S~ @templates.name a       @)~ Stemplates.name a       S!      y      y      ~ =templates.*WriterÂ·RegisterTemplate      =£      ~ ="".ContextÂ·Send ~ =type.func("".Context) Ü    =E      Aa    @p    Rp    S~ =templates.*WriterÂ·Send      =£      -    ;   == h   D-    ;== #D-    ;   ==    D-    ;   =   A-    ;   =Ï&óVA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ = go.string."func(handler.Context, string)" -    ;   ==  D~ =!weak.type.*func("".Context, string) -    ;   == !D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == )D5    ;
=D   A~ ="type.func("".Context, *templates.Item) -    ;"== #D-    ;   "==    "D-    ;   "=   A-    ;   "=¼"ºÜA-    ;   "=   A-    ;   "=   A-    ;   "=   A-    ;   "=   A~ =#go.string."func(handler.Context, *templates.Item)" -    ;   "== #D~ =$weak.type.*func("".Context, *templates.Item) -    ;   "== $D-    ;    "=A-    ;$   "== <   "D-    ;(   "=   A-    ;,   "=   A-    ;0   "== D   "D-    ;4   "=A-    ;8   "=A-    ;<   "== D~ =%type.*templates.Item -    ;@   "== %D5    ;
"=D   A~ =&type.*runtime.FuncType -    ;== &D-    ;   ==    D-    ;   =   A-    ;   =[¡áA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ ='go.string."func(handler.Context)" -    ;   == 'D~ =(weak.type.*func("".Context) -    ;   == (D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =A-    ;8   =A-    ;<   == D5    ;
=@   A-    ;h   == D~ =)go.importpath."". -    ;l   == )D-    ;p   == |   D-    ;t   =   A-    ;x   =   A-    ;|   == /D-    ;   =A-    ;   == 0D~ =*type.func("".Context, *templates.Item, *templates.Item) -    ;   == *D~ =+"".*ContextÂ·MyClick -    ;   == +D~ =,"".ContextÂ·MyClick -    ;   == ,D-    ;   == D-    ;   =A-    ;   == 0D-    ;    == *D~ =-"".*ContextÂ·MyClickFoo -    ;¤   == -D~ =."".ContextÂ·MyClickFoo -    ;¨   == .D-    ;¬   == D-    ;°   =A-    ;´   == D-    ;¸   == D~ =/"".*ContextÂ·RegisterTemplate -    ;¼   == /D-    ;À   == D-    ;Ä   == D-    ;È   =A-    ;Ì   == D-    ;Ð   == "D~ =0"".*ContextÂ·Root -    ;Ô   == 0D~ =1"".ContextÂ·Root -    ;Ø   == 1D-    ;Ü   == D-    ;à   =A-    ;ä   == D-    ;è   == D-    ;ì   == D-    ;ð   == D5    ;=ô   A-    ;*== &D-    ;   *==    *D-    ;   *=   A-    ;   *=ÖÁ$A-    ;   *=   A-    ;   *=   A-    ;   *=   A-    ;   *=   A~ =go.string."func(handler.Context, *templates.Item, *templates.Item)" -    ;   *== D~ =weak.type.*func("".Context, *templates.Item, *templates.Item) -    ;   *== D-    ;    *=A-    ;$   *== <   *D-    ;(   *=   A-    ;,   *=   A-    ;0   *== H   *D-    ;4   *=A-    ;8   *=A-    ;<   *== D-    ;@   *== %D-    ;D   *== %D5    ;
*=H   A~ =type.method(c "".Context)func(*templates.Item) -    ;== &D-    ;   ==    D-    ;   =   A-    ;   =4BoA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."method(c handler.Context)func(*templates.Item)" -    ;   == D~ =weak.type.*method(c "".Context)func(*templates.Item) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =A-    ;8   =A-    ;<   == D-    ;@   == %D5    ;
=D   A~ =type.func(*templates.Writer, string) *templates.Test_T -    ;== &D-    ;   ==    D-    ;   =   A-    ;   =aeA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*templates.Writer, string) *templates.Test_T" -    ;   == D~ =weak.type.*func(*templates.Writer, string) *templates.Test_T -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A-    ;<   == D~ =	type.string -    ;@   == 	D~ =
type.*templates.Test_T -    ;D   == 
D5    ;
=H   A~ =type.[]interface { } ~ =type.*runtime.SliceType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =6ûýlA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."[]interface { }" -    ;   == D~ =weak.type.*[]interface { } -    ;   == D~ =type.interface { } -    ;    == D5    ;
=$   A~ =type.[1]interface { } ~ =type.*runtime.ArrayType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =ÝcÏçA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."[1]interface { }" -    ;   == D~ =weak.type.*[1]interface { } -    ;   == D-    ;    == D-    ;$   == D-    ;(   =   A5    ;
=,   A~ =type.*[1]interface { } ~ =type.*runtime.PtrType -    ;== D-    ;   ==    D-    ;   =   A-    ;   =VDÀ_A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."*[1]interface { }" -    ;   == D~ =weak.type.**[1]interface { } -    ;   == D-    ;    == D5    ;
=$   A~ =type.func(int32) *[1]interface { } -    ;== &D-    ;   ==    D-    ;   =   A-    ;   =:A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(int32) *[1]interface { }" -    ;   == D~ =weak.type.*func(int32) *[1]interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =   A-    ;8   =   A~ =type.int32 -    ;<   == D-    ;@   == D5    ;
=D   A~ =type.func(*uint8, *templates.Test_T) interface { } -    ;== &D-    ;   ==    D-    ;   =   A-    ;   =?¹ùA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, *templates.Test_T) interface { }" -    ;   == D~ =weak.type.*func(*uint8, *templates.Test_T) interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A~ =type.*uint8 -    ;<   == D-    ;@   == 
D-    ;D   == D5    ;
=H   A~ = type.func(*uint8, string) interface { } -    ; == &D-    ;    ==     D-    ;    =   A-    ;    =ï¤)¤A-    ;    =   A-    ;    =   A-    ;    =   A-    ;    =   A~ =!go.string."func(*uint8, string) interface { }" -    ;    == !D~ ="weak.type.*func(*uint8, string) interface { } -    ;    == "D-    ;     =A-    ;$    == <    D-    ;(    =   A-    ;,    =   A-    ;0    == D    D-    ;4    =   A-    ;8    =   A-    ;<    == D-    ;@    == 	D-    ;D    == D5    ;
 =H   A~ =#type.func(*templates.Writer, string) *templates.Inner_T -    ;#== &D-    ;   #==    #D-    ;   #=   A-    ;   #=ÒémA-    ;   #=   A-    ;   #=   A-    ;   #=   A-    ;   #=   A~ =$go.string."func(*templates.Writer, string) *templates.Inner_T" -    ;   #== $D~ =%weak.type.*func(*templates.Writer, string) *templates.Inner_T -    ;   #== %D-    ;    #=A-    ;$   #== <   #D-    ;(   #=   A-    ;,   #=   A-    ;0   #== D   #D-    ;4   #=   A-    ;8   #=   A~ =&type.*templates.Writer -    ;<   #== &D-    ;@   #== 	D~ ='type.*templates.Inner_T -    ;D   #== 'D5    ;
#=H   A~ =(type.func(*uint8, *templates.Inner_T) interface { } ~ =)type.*runtime.FuncType -    ;(== )D-    ;   (==    (D-    ;   (=   A-    ;   (=6?A-    ;   (=   A-    ;   (=   A-    ;   (=   A-    ;   (=   A~ =*go.string."func(*uint8, *templates.Inner_T) interface { }" -    ;   (== *D~ =+weak.type.*func(*uint8, *templates.Inner_T) interface { } -    ;   (== +D-    ;    (=A-    ;$   (== <   (D-    ;(   (=   A-    ;,   (=   A-    ;0   (== D   (D-    ;4   (=   A-    ;8   (=   A-    ;<   (== D-    ;@   (== 'D-    ;D   (== D5    ;
(=H   A~ =,type.func(*uint8, int) interface { } -    ;,== )D-    ;   ,==    ,D-    ;   ,=   A-    ;   ,=ßL±íA-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A-    ;   ,=   A~ =-go.string."func(*uint8, int) interface { }" -    ;   ,== -D~ =.weak.type.*func(*uint8, int) interface { } -    ;   ,== .D-    ;    ,=A-    ;$   ,== <   ,D-    ;(   ,=   A-    ;,   ,=   A-    ;0   ,== D   ,D-    ;4   ,=   A-    ;8   ,=   A-    ;<   ,== D~ =/type.int -    ;@   ,== /D-    ;D   ,== D5    ;
,=H   A~ =0type.[2]interface { } -    ;0== D-    ;   0==    0D-    ;   0=   A-    ;   0=&·¯A-    ;   0=   A-    ;   0=   A-    ;   0=   A-    ;   0=   A~ =1go.string."[2]interface { }" -    ;   0== 1D~ =weak.type.*[2]interface { } -    ;   0== D-    ;    0== D-    ;$   0== D-    ;(   0=   A5    ;
0=,   A~ =type.*[2]interface { } -    ;== D-    ;   ==    D-    ;   =   A-    ;   =_¨QA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."*[2]interface { }" -    ;   == D~ =weak.type.**[2]interface { } -    ;   == D-    ;    == 0D5    ;
=$   A~ =type.func(int32) *[2]interface { } -    ;== )D-    ;   ==    D-    ;   =   A-    ;   =ÝÕA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(int32) *[2]interface { }" -    ;   == D~ =weak.type.*func(int32) *[2]interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =   A-    ;8   =   A-    ;<   == D-    ;@   == D5    ;
=D   A~ =type.func(*uint8, *templates.Item) interface { } -    ;== )D-    ;   ==    D-    ;   =   A-    ;   =Wb4âA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =	go.string."func(*uint8, *templates.Item) interface { }" -    ;   == 	D~ =
weak.type.*func(*uint8, *templates.Item) interface { } -    ;   == 
D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A-    ;<   == D~ =type.*templates.Item -    ;@   == D-    ;D   == D5    ;
=H   A~ =type.func(*uint8, func("".Context, *templates.Item, *templates.Item)) interface { } -    ;== )D-    ;   ==    D-    ;   =   A-    ;   =aVA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, func(handler.Context, *templates.Item, *templates.Item)) interface { }" -    ;   == D~ =weak.type.*func(*uint8, func("".Context, *templates.Item, *templates.Item)) interface { } -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A-    ;<   == D~ =type.func("".Context, *templates.Item, *templates.Item) -    ;@   == D~ =type.interface { } -    ;D   == D5    ;
=H   A~ =type.method(c "".Context)func(*templates.Item, *templates.Item) -    ;== )D-    ;   ==    D-    ;   =   A-    ;   =";òA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."method(c handler.Context)func(*templates.Item, *templates.Item)" -    ;   == D~ =weak.type.*method(c "".Context)func(*templates.Item, *templates.Item) -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =A-    ;8   =A~ =type."".Context -    ;<   == D-    ;@   == D-    ;D   == D5    ;
=H   A~ =type.func(int, string, string) string -    ;== )D-    ;   ==    D-    ;   =   A-    ;   =`ÅØA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(int, string, string) string" -    ;   == D~ =weak.type.*func(int, string, string) string -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == H   D-    ;4   =   A-    ;8   =   A-    ;<   == /D~ =type.string -    ;@   == D-    ;D   == D-    ;H   == D5    ;
=L   A~ =type.func(int32) *"".Context -    ;== )D-    ;   ==    D-    ;   =   A-    ;   =ßYxBA-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(int32) *handler.Context" -    ;   == D~ =weak.type.*func(int32) *"".Context -    ;   == D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == @   D-    ;4   =   A-    ;8   =   A~ =type.int32 -    ;<   == D~ =type.*"".Context -    ;@   == D5    ;
=D   A~ =type.func(*uint8, *"".Context) interface { } -    ;== )D-    ;   ==    D-    ;   =   A-    ;   =Nú®A-    ;   =   A-    ;   =   A-    ;   =   A-    ;   =   A~ =go.string."func(*uint8, *handler.Context) interface { }" -    ;   == D~ = weak.type.*func(*uint8, *"".Context) interface { } -    ;   ==  D-    ;    =A-    ;$   == <   D-    ;(   =   A-    ;,   =   A-    ;0   == D   D-    ;4   =   A-    ;8   =   A~ =!type.*uint8 -    ;<   == !D-    ;@   == D-    ;D   == D5    ;
=H   A~ ="go.importpath.runtime. ~ =#go.string."runtime" -    ;"==    #D-    ;   "=   A5    ;
"=   A~ =$go.importpath.templates. ~ =%go.string."templates" -    ;$==    %D-    ;   $=	   A5    ;
$=   A~ =&go.importpath.appengine. ~ ='go.string."appengine" -    ;&==    'D-    ;   &=	   A5    ;
&=   A~ =(go.importpath.http. ~ =)go.string."http" -    ;(==    )D-    ;   (=   A5    ;
(=   A~ =*go.string."/" - 	   ;*==    *D- 	   ;   *=   A- 	   ;   *= /       - 	   ;	   *=A5 	   ;
*=   A~ =+go.string."main" - "   ;+==    +D- "   ;   +=   A- "   ;   += main    - "   ;   +=A5 "   ;
+=   A~ =,go.string."Hello world!" - %   ;,==    ,D- %   ;   ,=   A- %   ;   ,= Hello wo- %   ;   ,= rld!    - %   ;   ,=A5 %   ;
,=   A~ =-go.string."foo" - &   ;-==    -D- &   ;   -=   A- &   ;   -= foo     - &   ;   -=A5 &   ;
-=   A~ =.go.string."value" - &   ;.==    .D- &   ;   .=   A- &   ;   .= value   - &   ;   .=A5 &   ;
.=   A~ =/go.string."dave" - (   ;/==    /D- (   ;   /=   A- (   ;   /= dave    - (   ;   /=A5 (   ;
/=   A~ =0go.string."BAR" - +   ;0==    0D- +   ;   0=   A- +   ;   0= BAR     - +   ;   0=A5 +   ;
0=   A~ =1go.string."http://pix-eu.dontstayin.com/53812cd7-33c7-44ac-a766-9710e4f14077.jpg" - ,   ;1==    1D- ,   ;   1=E   A- ,   ;   1= http://p- ,   ;   1= ix-eu.do- ,   ;   1= ntstayin- ,   ;    1= .com/538- ,   ;(   1= 12cd7-33- ,   ;0   1= c7-44ac-- ,   ;8   1= a766-971- ,   ;@   1= 0e4f1407- ,   ;H   1= 7.jpg   - ,   ;M   1=A5 ,   ;
1=P   A~ =go.string."src" - ,   ;==    D- ,   ;   =   A- ,   ;   = src     - ,   ;   =A5 ,   ;
=   A~ =go.string."width" - -   ;==    D- -   ;   =   A- -   ;   = width   - -   ;   =A5 -   ;
=   A~ =go.string."height" - .   ;==    D- .   ;   =   A- .   ;   = height  - .   ;   =A5 .   ;
=   A~ =go.string."WHOOOOOOPPPPPPPPP!!!!! " - 7   ;==    D- 7   ;   =   A- 7   ;   = WHOOOOOO- 7   ;   = PPPPPPPP- 7   ;   = P!!!!!  - 7   ;   =A5 7   ;
=    A~ =go.string."FOOOOOOOOOOO " - =   ;==    D- =   ;   =   A- =   ;   = FOOOOOOO- =   ;   = OOOO    - =   ;   =A5 =   ;
=   A~ =go.string."func()" - @   ;==    D- @   ;   =   A- @   ;   = func()  - @   ;   =A5 @   ;
=   A~ =go.string."func(http.ResponseWriter, *http.Request)" - @   ;==    D- @   ;   =(   A- @   ;   = func(htt- @   ;   = p.Respon- @   ;   = seWriter- @   ;    = , *http.- @   ;(   = Request)- @   ;0   =A5 @   ;
=4   A~ =go.string."func(string, func(http.ResponseWriter, *http.Request))" - @   ;==    D- @   ;   =6   A- @   ;   = func(str- @   ;   = ing, fun- @   ;   = c(http.R- @   ;    = esponseW- @   ;(   = riter, *- @   ;0   = http.Req- @   ;8   = uest))  - @   ;>   =A5 @   ;
=@   A~ =	go.string."interface { }" - @   ;	==    	D- @   ;   	=   A- @   ;   	= interfac- @   ;   	= e { }   - @   ;   	=A5 @   ;
	=   A~ =
go.string."func(uintptr, *appengine.Context, *templates.Writer, *http.Request) interface { }" - @   ;
==    
D- @   ;   
=Q   A- @   ;   
= func(uin- @   ;   
= tptr, *a- @   ;   
= ppengine- @   ;    
= .Context- @   ;(   
= , *templ- @   ;0   
= ates.Wri- @   ;8   
= ter, *ht- @   ;@   
= tp.Reque- @   ;H   
= st) inte- @   ;P   
= rface { - @   ;X   
= }       - @   ;Y   
=A5 @   ;

=\   A~ =go.string."func(*appengine.Context, *templates.Writer, *http.Request) interface { }" - @   ;==    D- @   ;   =H   A- @   ;   = func(*ap- @   ;   = pengine.- @   ;   = Context,- @   ;    =  *templa- @   ;(   = tes.Writ- @   ;0   = er, *htt- @   ;8   = p.Reques- @   ;@   = t) inter- @   ;H   = face { }- @   ;P   =A5 @   ;
=T   A~ =""..gostring.1 - @   ;==    D- @   ;   =¥   A- @   ;   = func(int- @   ;   = , func(u- @   ;   = intptr, - @   ;    = *appengi- @   ;(   = ne.Conte- @   ;0   = xt, *tem- @   ;8   = plates.W- @   ;@   = riter, *- @   ;H   = http.Req- @   ;P   = uest) in- @   ;X   = terface - @   ;`   = { }) fun- @   ;h   = c(*appen- @   ;p   = gine.Con- @   ;x   = text, *t- @   ;   = emplates- @   ;   = .Writer,- @   ;   =  *http.R- @   ;   = equest) - @   ;    = interfac- @   ;¨   = e { }   - @   ;­   =A5 @   ;
=°   A~ =""..gostring.2 - @   ;==    D- @   ;   =r   A- @   ;   = func(htt- @   ;   = p.Respon- @   ;   = seWriter- @   ;    = , *http.- @   ;(   = Request,- @   ;0   =  func(*a- @   ;8   = ppengine- @   ;@   = .Context- @   ;H   = , *templ- @   ;P   = ates.Wri- @   ;X   = ter, *ht- @   ;`   = tp.Reque- @   ;h   = st) inte- @   ;p   = rface { - @   ;x   = })      - @   ;z   =A5 @   ;
=|   A~ =go.string."*handler.Context" - @   ;==    D- @   ;   =   A- @   ;   = *handler- @   ;   = .Context- @   ;   =A5 @   ;
=   A~ =go.string."func(*handler.Context, *templates.Item, *templates.Item)" -    ;==    D-    ;   =8   A-    ;   = func(*ha-    ;   = ndler.Co-    ;   = ntext, *-    ;    = template-    ;(   = s.Item, -    ;0   = *templat-    ;8   = es.Item)-    ;@   =A5    ;
=D   A~ =go.string."func(*handler.Context, string)" -    ;==    D-    ;   =   A-    ;   = func(*ha-    ;   = ndler.Co-    ;   = ntext, s-    ;    = tring)  -    ;&   =A5    ;
=(   A~ =go.string."func(*handler.Context, *templates.Item)" -    ;==    D-    ;   ='   A-    ;   = func(*ha-    ;   = ndler.Co-    ;   = ntext, *-    ;    = template-    ;(   = s.Item) -    ;/   =A5    ;
=0   A~ =go.string."func(*handler.Context)" -    ;==    D-    ;   =   A-    ;   = func(*ha-    ;   = ndler.Co-    ;   = ntext)  -    ;   =A5    ;
=    A~ =go.string."MyClick" -    ;==    D-    ;   =   A-    ;   = MyClick -    ;   =A5    ;
=   A~ =go.string."func(*templates.Item, *templates.Item)" -    ;==    D-    ;   =&   A-    ;   = func(*te-    ;   = mplates.-    ;   = Item, *t-    ;    = emplates-    ;(   = .Item)  -    ;.   =A5    ;
=0   A~ =go.string."MyClickFoo" -    ;==    D-    ;   =
   A-    ;   = MyClickF-    ;   = oo      -    ;   =A5    ;
=   A~ =go.string."RegisterTemplate" -    ;==    D-    ;   =   A-    ;   = Register-    ;   = Template-    ;   =A5    ;
=   A~ =go.string."func(string)" -    ;==    D-    ;   =   A-    ;   = func(str-    ;   = ing)    -    ;   =A5    ;
=   A~ =go.string."Root" -    ;==    D-    ;   =   A-    ;   = Root    -    ;   =A5    ;
=   A~ =go.string."func(*templates.Item)" -    ;==    D-    ;   =   A-    ;   = func(*te-    ;   = mplates.-    ;   = Item)   -    ;   =A5    ;
=    A~ =go.string."Send" -    ;==    D-    ;   =   A-    ;   = Send    -    ;   =A5    ;
=   A~ =go.string."handler.Context" -    ;==    D-    ;   =   A-    ;   = handler.-    ;   = Context -    ;   =A5    ;
=   A~ =go.string."Context" -    ;==    D-    ;   =   A-    ;   = Context -    ;   =A5    ;
=   A~ =go.string."Request" -    ;==    D-    ;   =   A-    ;   = Request -    ;   =A5    ;
=   A~ =go.string."func(handler.Context, string)" -    ;==    D-    ;   =   A-    ;   = func(han-    ;   = dler.Con-    ;   = text, st-    ;    = ring)   -    ;%   =A5    ;
=(   A~ =go.string."func(handler.Context, *templates.Item)" -    ;==    D-    ;   =&   A-    ;   = func(han-    ;   = dler.Con-    ;   = text, *t-    ;    = emplates-    ;(   = .Item)  -    ;.   =A5    ;
=0   A~ = go.string."func(handler.Context)" -    ; ==     D-    ;    =   A-    ;    = func(han-    ;    = dler.Con-    ;    = text)   -    ;    =A5    ;
 =    A~ =!go.string."func(handler.Context, *templates.Item, *templates.Item)" -    ;!==    !D-    ;   !=7   A-    ;   != func(han-    ;   != dler.Con-    ;   != text, *t-    ;    != emplates-    ;(   != .Item, *-    ;0   != template-    ;8   != s.Item) -    ;?   !=A5    ;
!=@   A~ ="go.string."method(c handler.Context)func(*templates.Item)" -    ;"==    "D-    ;   "=.   A-    ;   "= method(c-    ;   "=  handler-    ;   "= .Context-    ;    "= )func(*t-    ;(   "= emplates-    ;0   "= .Item)  -    ;6   "=A5    ;
"=8   A~ =#go.string."func(*templates.Writer, string) *templates.Test_T" -    ;#==    #D-    ;   #=1   A-    ;   #= func(*te-    ;   #= mplates.-    ;   #= Writer, -    ;    #= string) -    ;(   #= *templat-    ;0   #= es.Test_-    ;8   #= T       -    ;9   #=A5    ;
#=<   A~ =$go.string."[]interface { }" -    ;$==    $D-    ;   $=   A-    ;   $= []interf-    ;   $= ace { } -    ;   $=A5    ;
$=   A~ =%go.string."[1]interface { }" -    ;%==    %D-    ;   %=   A-    ;   %= [1]inter-    ;   %= face { }-    ;   %=A5    ;
%=   A~ =&go.string."*[1]interface { }" -    ;&==    &D-    ;   &=   A-    ;   &= *[1]inte-    ;   &= rface { -    ;   &= }       -    ;   &=A5    ;
&=   A~ ='go.string."func(int32) *[1]interface { }" -    ;'==    'D-    ;   '=   A-    ;   '= func(int-    ;   '= 32) *[1]-    ;   '= interfac-    ;    '= e { }   -    ;%   '=A5    ;
'=(   A~ =(go.string."func(*uint8, *templates.Test_T) interface { }" -    ;(==    (D-    ;   (=-   A-    ;   (= func(*ui-    ;   (= nt8, *te-    ;   (= mplates.-    ;    (= Test_T) -    ;(   (= interfac-    ;0   (= e { }   -    ;5   (=A5    ;
(=8   A~ =)go.string."func(*uint8, string) interface { }" -    ;)==    )D-    ;   )="   A-    ;   )= func(*ui-    ;   )= nt8, str-    ;   )= ing) int-    ;    )= erface {-    ;(   )=  }      -    ;*   )=A5    ;
)=,   A~ =*go.string."func(*templates.Writer, string) *templates.Inner_T" -    ;*==    *D-    ;   *=2   A-    ;   *= func(*te-    ;   *= mplates.-    ;   *= Writer, -    ;    *= string) -    ;(   *= *templat-    ;0   *= es.Inner-    ;8   *= _T      -    ;:   *=A5    ;
*=<   A~ =+go.string."func(*uint8, *templates.Inner_T) interface { }" -    ;+==    +D-    ;   +=.   A-    ;   += func(*ui-    ;   += nt8, *te-    ;   += mplates.-    ;    += Inner_T)-    ;(   +=  interfa-    ;0   += ce { }  -    ;6   +=A5    ;
+=8   A~ =,go.string."func(*uint8, int) interface { }" -    ;,==    ,D-    ;   ,=   A-    ;   ,= func(*ui-    ;   ,= nt8, int-    ;   ,= ) interf-    ;    ,= ace { } -    ;'   ,=A5    ;
,=(   A~ =-go.string."[2]interface { }" -    ;-==    -D-    ;   -=   A-    ;   -= [2]inter-    ;   -= face { }-    ;   -=A5    ;
-=   A~ =.go.string."*[2]interface { }" -    ;.==    .D-    ;   .=   A-    ;   .= *[2]inte-    ;   .= rface { -    ;   .= }       -    ;   .=A5    ;
.=   A~ =/go.string."func(int32) *[2]interface { }" -    ;/==    /D-    ;   /=   A-    ;   /= func(int-    ;   /= 32) *[2]-    ;   /= interfac-    ;    /= e { }   -    ;%   /=A5    ;
/=(   A~ =0go.string."func(*uint8, *templates.Item) interface { }" -    ;0==    0D-    ;   0=+   A-    ;   0= func(*ui-    ;   0= nt8, *te-    ;   0= mplates.-    ;    0= Item) in-    ;(   0= terface -    ;0   0= { }     -    ;3   0=A5    ;
0=4   A~ =1go.string."func(*uint8, func(handler.Context, *templates.Item, *templates.Item)) interface { }" -    ;1==    1D-    ;   1=S   A-    ;   1= func(*ui-    ;   1= nt8, fun-    ;   1= c(handle-    ;    1= r.Contex-    ;(   1= t, *temp-    ;0   1= lates.It-    ;8   1= em, *tem-    ;@   1= plates.I-    ;H   1= tem)) in-    ;P   1= terface -    ;X   1= { }     -    ;[   1=A5    ;
1=\   A~ =go.string."method(c handler.Context)func(*templates.Item, *templates.Item)" -    ;==    D-    ;   =?   A-    ;   = method(c-    ;   =  handler-    ;   = .Context-    ;    = )func(*t-    ;(   = emplates-    ;0   = .Item, *-    ;8   = template-    ;@   = s.Item) -    ;G   =A5    ;
=H   A~ =go.string."func(int, string, string) string" -    ;==    D-    ;   =    A-    ;   = func(int-    ;   = , string-    ;   = , string-    ;    = ) string-    ;(   =A5    ;
=,   A~ =go.string."func(int32) *handler.Context" -    ;==    D-    ;   =   A-    ;   = func(int-    ;   = 32) *han-    ;   = dler.Con-    ;    = text    -    ;$   =A5    ;
=(   A~ =go.string."func(*uint8, *handler.Context) interface { }" -    ;==    D-    ;   =,   A-    ;   = func(*ui-    ;   = nt8, *ha-    ;   = ndler.Co-    ;    = ntext) i-    ;(   = nterface-    ;0   =  { }    -    ;4   =A5    ;
=8   A~ =go.string."runtime" -    ;==    D-    ;   =   A-    ;   = runtime -    ;   =A5    ;
=   A~ =go.string."templates" -    ;==    D-    ;   =	   A-    ;   = template-    ;   = s       -    ;   =A5    ;
=   A~ =go.string."appengine" -    ;==    D-    ;   =	   A-    ;   = appengin-    ;   = e       -    ;   =A5    ;
=   A~ =go.string."http" -    ;==    D-    ;   =   A-    ;   = http    -    ;   =A5    ;
=   AM      